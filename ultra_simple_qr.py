#!/usr/bin/env python3
"""
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR-–∫–æ–¥–æ–≤ —Å —Ç–µ–∫—Å—Ç–æ–º
"""

import qrcode
from PIL import Image, ImageDraw
import os
import sqlite3

def create_qr_with_label():
    """–°–æ–∑–¥–∞–µ—Ç QR-–∫–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤."""
    print("üéØ –°–û–ó–î–ê–ù–ò–ï QR-–ö–û–î–û–í –° –ü–û–î–ü–ò–°–Ø–ú–ò")
    print("=" * 45)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
    try:
        conn = sqlite3.connect("data/evgenich_data.db")
        conn.row_factory = sqlite3.Row
        cur = conn.cursor()
        cur.execute("SELECT * FROM staff WHERE status = 'active'")
        staff_list = cur.fetchall()
        conn.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
    output_dir = "qr_with_labels"
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    
    for staff in staff_list:
        name = staff['full_name']
        position = staff['position']
        code = staff['unique_code']
        
        print(f"\nüë§ –°–æ–∑–¥–∞—é QR –¥–ª—è: {name}")
        
        # –°—Å—ã–ª–∫–∞
        url = f"https://t.me/evgenichspbbot?start=w_{code}"
        
        try:
            # QR-–∫–æ–¥
            qr = qrcode.QRCode(version=1, box_size=8, border=2)
            qr.add_data(url)
            qr.make(fit=True)
            qr_img = qr.make_image(fill_color="black", back_color="white")
            
            # –†–∞–∑–º–µ—Ä—ã
            qr_size = qr_img.size[0]
            
            # –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –º–µ—Å—Ç–æ–º –¥–ª—è —Ç–µ–∫—Å—Ç–∞
            total_height = qr_size + 80
            final_img = Image.new('RGB', (qr_size, total_height), 'white')
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º QR
            final_img.paste(qr_img, (0, 0))
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º
            draw = ImageDraw.Draw(final_img)
            
            # –¢–µ–∫—Å—Ç –±–µ–∑ —à—Ä–∏—Ñ—Ç–æ–≤ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
            y_pos = qr_size + 10
            
            # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
            name_x = max(5, (qr_size - len(name) * 6) // 2)
            pos_x = max(5, (qr_size - len(f"({position})") * 5) // 2)
            code_x = max(5, (qr_size - len(f"ID: {code}") * 5) // 2)
            
            # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
            draw.text((name_x, y_pos), name, fill="black")
            draw.text((pos_x, y_pos + 20), f"({position})", fill="gray")
            draw.text((code_x, y_pos + 40), f"ID: {code}", fill="gray")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            filename = f"{output_dir}/{name.replace(' ', '_')}_QR.png"
            final_img.save(filename)
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {filename}")
            print(f"üîó –°—Å—ã–ª–∫–∞: {url}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print(f"\nüéâ QR-–∫–æ–¥—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ '{output_dir}/'")
    print("üñ®Ô∏è –ì–æ—Ç–æ–≤—ã –∫ –ø–µ—á–∞—Ç–∏ —Å –∏–º–µ–Ω–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤!")

if __name__ == "__main__":
    create_qr_with_label()
