#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç config
"""

import sqlite3
import os

def check_real_staff():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    db_path = 'bot_database.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    conn = sqlite3.connect(db_path)
    cur = conn.cursor()
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –†–ï–ê–õ–¨–ù–û–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É staff
    try:
        cur.execute("SELECT * FROM staff")
        staff_data = cur.fetchall()
        
        if staff_data:
            print(f"üë• –ù–∞–π–¥–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(staff_data)}")
            print()
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
            cur.execute("PRAGMA table_info(staff)")
            columns = [col[1] for col in cur.fetchall()]
            
            for row in staff_data:
                staff_dict = dict(zip(columns, row))
                print(f"üë§ {staff_dict.get('full_name', 'N/A')} ({staff_dict.get('position', 'N/A')})")
                print(f"   ID: {staff_dict.get('staff_id', 'N/A')}")
                print(f"   –ö–æ–¥: {staff_dict.get('unique_code', 'N/A')}")
                print(f"   –°—Ç–∞—Ç—É—Å: {staff_dict.get('status', 'N/A')}")
                print(f"   Telegram ID: {staff_dict.get('telegram_id', 'N/A')}")
                print(f"   QR-—Å—Å—ã–ª–∫–∞: https://t.me/EvgenichTapBarBot?start=w_{staff_dict.get('unique_code', 'N/A')}")
                print()
        else:
            print("‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞!")
            print("üí° –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ /staff_reg –≤ —Ä–∞–±–æ—á–µ–º —á–∞—Ç–µ")
    
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã staff: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n" + "=" * 50)
    print("üìä –ü–û–°–õ–ï–î–ù–ò–ï –ü–ï–†–ï–•–û–î–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
    
    try:
        cur.execute("""
            SELECT user_id, source, brought_by_staff_id, created_at 
            FROM users 
            ORDER BY created_at DESC 
            LIMIT 10
        """)
        recent_users = cur.fetchall()
        
        if recent_users:
            for user in recent_users:
                user_id, source, staff_id, created_at = user
                if staff_id:
                    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: {source} (–ø—Ä–∏–≤–µ–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ ID: {staff_id}) - {created_at}")
                else:
                    print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: {source} (–±–µ–∑ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞) - {created_at}")
        else:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö")
            
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    conn.close()

if __name__ == "__main__":
    check_real_staff()
