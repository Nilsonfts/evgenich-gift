#!/usr/bin/env python3
"""
–¢–µ—Å—Ç QR-—Å–∏—Å—Ç–µ–º—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def test_qr_with_correct_db():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç QR-—Å–∏—Å—Ç–µ–º—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö."""
    db_path = "data/evgenich_data.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ó–∞–ø—É—Å—Ç–∏—Ç–µ init_correct_db.py")
        return
    
    print("üß™ –¢–ï–°–¢ QR-–°–ò–°–¢–ï–ú–´ –° –ü–†–ê–í–ò–õ–¨–ù–û–ô –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
    print("=" * 55)
    
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    cur = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    cur.execute("SELECT * FROM staff WHERE status = 'active'")
    staff_members = cur.fetchall()
    
    print(f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(staff_members)}")
    
    for staff in staff_members:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {staff['full_name']}")
        print(f"   –ö–æ–¥: {staff['unique_code']}")
        print(f"   Telegram ID: {staff['telegram_id']}")
        print(f"   QR-—Å—Å—ã–ª–∫–∞: https://t.me/EvgenichTapBarBot?start=w_{staff['unique_code']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ QR-–∫–æ–¥—É
        payload = f"w_{staff['unique_code']}"
        
        if payload.startswith('w_'):
            staff_code = payload.replace('w_', '')
            print(f"   üìù –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –∫–æ–¥: {staff_code}")
            
            # –ò—â–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∫–∞–∫ –≤ user_commands.py)
            cur.execute("SELECT * FROM staff WHERE unique_code = ? AND status = 'active'", (staff_code,))
            found_staff = cur.fetchone()
            
            if found_staff:
                brought_by_staff_id = found_staff['staff_id']
                source = f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫: {found_staff['short_name']}"
                
                print(f"   ‚úÖ –°–û–¢–†–£–î–ù–ò–ö –ù–ê–ô–î–ï–ù!")
                print(f"   üìä –ò—Å—Ç–æ—á–Ω–∏–∫: {source}")
                print(f"   üîó brought_by_staff_id: {brought_by_staff_id}")
                
                # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                test_user_id = 777777777
                
                try:
                    cur.execute("""
                        INSERT OR REPLACE INTO users 
                        (user_id, username, first_name, source, brought_by_staff_id, status)
                        VALUES (?, ?, ?, ?, ?, 'registered')
                    """, (test_user_id, "test_user", "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", source, brought_by_staff_id))
                    
                    conn.commit()
                    print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!")
                    
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                    
            else:
                print(f"   ‚ùå –°–û–¢–†–£–î–ù–ò–ö –ù–ï –ù–ê–ô–î–ï–ù!")
                print(f"   üìä –ò—Å—Ç–æ—á–Ω–∏–∫ –±—É–¥–µ—Ç: direct")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print("-" * 30)
    
    cur.execute("""
        SELECT u.user_id, u.source, u.brought_by_staff_id, s.full_name as staff_name
        FROM users u
        LEFT JOIN staff s ON u.brought_by_staff_id = s.staff_id
        ORDER BY u.rowid DESC
        LIMIT 5
    """)
    
    users = cur.fetchall()
    
    if users:
        for user in users:
            if user['brought_by_staff_id']:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['user_id']}: {user['source']} ‚Üí –ø—Ä–∏–≤–µ–ª {user['staff_name']} (ID: {user['brought_by_staff_id']})")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['user_id']}: {user['source']} ‚Üí –±–µ–∑ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
    else:
        print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ")
    
    conn.close()

def create_real_staff_example():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞."""
    db_path = "data/evgenich_data.db"
    
    print(f"\nüë§ –°–û–ó–î–ê–ù–ò–ï –ü–†–ò–ú–ï–†–ê –†–ï–ê–õ–¨–ù–û–ì–û –°–û–¢–†–£–î–ù–ò–ö–ê")
    print("-" * 45)
    
    # –î–∞–Ω–Ω—ã–µ –∫–∞–∫ –µ—Å–ª–∏ –±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Ä–µ–∞–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è
    real_staff = {
        'telegram_id': 196614680,  # ID –∏–∑ –≤–∞—à–∏—Ö –ª–æ–≥–æ–≤
        'full_name': '–ï–≤–≥–µ–Ω–∏–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á',
        'short_name': '–ï–≤–≥–µ–Ω–∏–π –í.',
        'unique_code': 'EVGENIY2024',
        'position': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
    }
    
    conn = sqlite3.connect(db_path)
    cur = conn.cursor()
    
    try:
        cur.execute("""
            INSERT OR REPLACE INTO staff (telegram_id, full_name, short_name, unique_code, position, status)
            VALUES (?, ?, ?, ?, ?, 'active')
        """, (
            real_staff['telegram_id'],
            real_staff['full_name'],
            real_staff['short_name'],
            real_staff['unique_code'],
            real_staff['position']
        ))
        
        conn.commit()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ä–µ–∞–ª—å–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫:")
        print(f"   Telegram ID: {real_staff['telegram_id']}")
        print(f"   –ò–º—è: {real_staff['full_name']}")
        print(f"   –ö–æ–¥: {real_staff['unique_code']}")
        print(f"   QR-—Å—Å—ã–ª–∫–∞: https://t.me/EvgenichTapBarBot?start=w_{real_staff['unique_code']}")
        print(f"\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç QR-–∫–æ–¥!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {e}")
    
    conn.close()

if __name__ == "__main__":
    test_qr_with_correct_db()
    create_real_staff_example()
