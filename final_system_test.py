#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤
"""

import sqlite3
import os
import sys
from datetime import datetime, timedelta

def final_system_test():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π."""
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ QR-–ö–û–î–û–í")
    print("=" * 50)
    
    db_path = "data/evgenich_data.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    cur = conn.cursor()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É staff
    cur.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='staff'")
    if cur.fetchone():
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ staff —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cur.execute("SELECT COUNT(*) as count FROM staff WHERE status = 'active'")
        staff_count = cur.fetchone()['count']
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {staff_count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        cur.execute("SELECT full_name, unique_code FROM staff WHERE status = 'active'")
        staff_list = cur.fetchall()
        for staff in staff_list:
            print(f"   ‚Ä¢ {staff['full_name']} ({staff['unique_code']})")
    else:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ staff –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("-" * 40)
    
    cur.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='users'")
    if cur.fetchone():
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
        cur.execute("""
            SELECT source, COUNT(*) as count 
            FROM users 
            GROUP BY source 
            ORDER BY count DESC
        """)
        sources = cur.fetchall()
        
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:")
        for source in sources:
            print(f"   ‚Ä¢ {source['source']}: {source['count']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
        cur.execute("""
            SELECT 
                s.full_name,
                s.unique_code,
                COUNT(u.user_id) as attracted_users
            FROM staff s
            LEFT JOIN users u ON s.staff_id = u.brought_by_staff_id 
                AND u.source = 'staff'
            WHERE s.status = 'active'
            GROUP BY s.staff_id, s.full_name, s.unique_code
            ORDER BY attracted_users DESC
        """)
        
        staff_stats = cur.fetchall()
        print("\nüë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º:")
        for staff in staff_stats:
            print(f"   ‚Ä¢ {staff['full_name']} ({staff['unique_code']}): {staff['attracted_users']} –≥–æ—Å—Ç–µ–π")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ô –ê–ù–ê–õ–ò–¢–ò–ö–ò")
    print("-" * 40)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å database
        sys.path.append('.')
        sys.modules['config'] = type('config', (), {
            'BOT_TOKEN': 'test',
            'CHANNEL_ID': '@test',
            'ADMIN_IDS': [123],
            'HELLO_STICKER_ID': 'test',
            'NASTOYKA_STICKER_ID': 'test',
            'THANK_YOU_STICKER_ID': 'test',
            'REPORT_CHAT_ID': 123,
            'GOOGLE_SHEET_KEY': None,
            'GOOGLE_CREDENTIALS_JSON': None
        })()
        
        import database
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ–ø–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        end_time = datetime.now()
        start_time = end_time - timedelta(days=30)  # –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
        
        leaderboard = database.get_staff_leaderboard(start_time, end_time)
        
        if leaderboard:
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è get_staff_leaderboard —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("üèÜ –¢–û–ü —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∑–∞ –º–µ—Å—è—Ü:")
            for i, staff in enumerate(leaderboard[:3], 1):  # –¢–æ–ø-3
                print(f"   {i}. {staff['full_name']} ({staff['position']})")
                print(f"      –ü—Ä–∏–≤–ª–µ–∫: {staff['attracted_users']} –≥–æ—Å—Ç–µ–π")
                print(f"      QR-–∫–æ–¥: {staff['unique_code']}")
        else:
            print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è get_staff_leaderboard –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        monthly_stats = database.get_staff_period_stats(start_time, end_time)
        
        if monthly_stats:
            print(f"\n‚úÖ –§—É–Ω–∫—Ü–∏—è get_staff_period_stats —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥:")
            print(f"   –í—Å–µ–≥–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–æ: {monthly_stats.get('total_attracted', 0)} –≥–æ—Å—Ç–µ–π")
            print(f"   –í—ã–¥–∞–Ω–æ –∫—É–ø–æ–Ω–æ–≤: {monthly_stats.get('total_issued', 0)}")
            print(f"   –ü–æ–≥–∞—à–µ–Ω–æ –∫—É–ø–æ–Ω–æ–≤: {monthly_stats.get('total_redeemed', 0)}")
            print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {monthly_stats.get('active_staff_count', 0)}")
        else:
            print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è get_staff_period_stats –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º QR-–∫–æ–¥—ã
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê QR-–ö–û–î–û–í")
    print("-" * 40)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    cur.execute("SELECT full_name, unique_code FROM staff WHERE status = 'active'")
    staff_list = cur.fetchall()
    
    print("üîó –°—Å—ã–ª–∫–∏ QR-–∫–æ–¥–æ–≤:")
    for staff in staff_list:
        qr_link = f"https://t.me/evgenichspbbot?start=w_{staff['unique_code']}"
        print(f"   ‚Ä¢ {staff['full_name']}: {qr_link}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ QR-–∫–æ–¥–∞
    print("\n5Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò QR-–ö–û–î–ê")
    print("-" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–∞–ø—Ä—è–º—É—é
    test_code = staff_list[0]['unique_code'] if staff_list else None
    if test_code:
        staff_member = database.find_staff_by_code(test_code)
        if staff_member:
            print(f"‚úÖ QR-–∫–æ–¥ {test_code} –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
            print(f"   –°–æ—Ç—Ä—É–¥–Ω–∏–∫: {staff_member['full_name']}")
            print(f"   ID: {staff_member['staff_id']}")
            print(f"   –ü–æ–∑–∏—Ü–∏—è: {staff_member['position']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è source
            expected_source = "staff"
            print(f"‚úÖ –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ QR source –±—É–¥–µ—Ç: '{expected_source}'")
            
        else:
            print(f"‚ùå QR-–∫–æ–¥ {test_code} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π –∫–æ–¥ –Ω–∏–ª680
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ö–ò–†–ò–õ–õ–ò–ß–ï–°–ö–û–ì–û –ö–û–î–ê:")
    nil_staff = database.find_staff_by_code("–Ω–∏–ª680")
    if nil_staff:
        print(f"‚úÖ –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π –∫–æ–¥ '–Ω–∏–ª680' –Ω–∞–π–¥–µ–Ω")
        print(f"   –°–æ—Ç—Ä—É–¥–Ω–∏–∫: {nil_staff['full_name']}")
        print(f"   QR-—Å—Å—ã–ª–∫–∞: https://t.me/evgenichspbbot?start=w_–Ω–∏–ª680")
    else:
        print("‚ùå –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π –∫–æ–¥ '–Ω–∏–ª680' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("   –î–æ–±–∞–≤—å—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: python add_nil680_staff.py")
    
    conn.close()
    
    print("\nüéâ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("=" * 50)

if __name__ == "__main__":
    final_system_test()
