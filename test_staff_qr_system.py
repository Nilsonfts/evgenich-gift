#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
"""

import sys
import os
import sqlite3
import datetime
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import database
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_staff_qr_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É QR-–∫–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤."""
    print("=== –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ QR-–ö–û–î–û–í –°–û–¢–†–£–î–ù–ò–ö–û–í ===")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        conn = database.get_db_connection()
        cur = conn.cursor()
        cur.execute("SELECT staff_id, full_name, short_name, unique_code, position FROM staff WHERE status = 'active'")
        active_staff = cur.fetchall()
        
        print(f"\nüìã –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –±–∞–∑–µ: {len(active_staff)}")
        
        if not active_staff:
            print("‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤!")
            print("üí° –î–æ–±–∞–≤—å—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±–æ—Ç–∞:")
            print("   /admin ‚Üí üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º ‚Üí ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
            return False
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∏—Ö QR-–∫–æ–¥—ã
        print("\nüë• –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
        for staff in active_staff:
            qr_url = f"https://t.me/EvgenichTapBarBot?start=w_{staff['unique_code']}"
            print(f"  ‚Ä¢ {staff['full_name']} ({staff['position']})")
            print(f"    –ö–æ–¥: {staff['unique_code']}")
            print(f"    QR-—Å—Å—ã–ª–∫–∞: {qr_url}")
            print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –∫–æ–¥—É
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–¥—É:")
        for staff in active_staff[:3]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã—Ö 3
            found_staff = database.find_staff_by_code(staff['unique_code'])
            if found_staff:
                print(f"  ‚úÖ –ö–æ–¥ {staff['unique_code']} ‚Üí {found_staff['full_name']}")
            else:
                print(f"  ‚ùå –ö–æ–¥ {staff['unique_code']} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥
        fake_code = "FAKE123"
        found_fake = database.find_staff_by_code(fake_code)
        if found_fake:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ {fake_code} –Ω–∞–π–¥–µ–Ω!")
        else:
            print(f"  ‚úÖ –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ {fake_code} –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        tz_moscow = pytz.timezone('Europe/Moscow')
        current_time = datetime.datetime.now(tz_moscow)
        week_ago = current_time - datetime.timedelta(days=7)
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ QR-–∫–æ–¥–∞–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:")
        print(f"   ({week_ago.strftime('%d.%m.%Y')} - {current_time.strftime('%d.%m.%Y')})")
        
        # –£—Å–ø–µ—à–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã
        cur.execute("""
            SELECT source, COUNT(*) as count 
            FROM users 
            WHERE signup_date >= ? AND source LIKE '–°–æ—Ç—Ä—É–¥–Ω–∏–∫:%'
            GROUP BY source
            ORDER BY count DESC
        """, (week_ago,))
        successful_qr = cur.fetchall()
        
        if successful_qr:
            total_success = sum(row['count'] for row in successful_qr)
            print(f"  ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: {total_success}")
            for row in successful_qr:
                staff_name = row['source'].replace('–°–æ—Ç—Ä—É–¥–Ω–∏–∫: ', '')
                print(f"    ‚Ä¢ {staff_name}: {row['count']}")
        else:
            print("  ‚ö†Ô∏è  –£—Å–ø–µ—à–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü–µ—Ä–µ—Ö–æ–¥—ã —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∫–æ–¥–∞–º–∏
        cur.execute("""
            SELECT source, COUNT(*) as count 
            FROM users 
            WHERE signup_date >= ? AND source LIKE '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π_—Å–æ—Ç—Ä—É–¥–Ω–∏–∫_%'
            GROUP BY source
        """, (week_ago,))
        invalid_codes = cur.fetchall()
        
        if invalid_codes:
            total_invalid = sum(row['count'] for row in invalid_codes)
            print(f"  ‚ùå –ü–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∫–æ–¥–∞–º–∏: {total_invalid}")
            for row in invalid_codes:
                invalid_code = row['source'].replace('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π_—Å–æ—Ç—Ä—É–¥–Ω–∏–∫_', '')
                print(f"    ‚Ä¢ –ö–æ–¥ '{invalid_code}': {row['count']} –ø–æ–ø—ã—Ç–æ–∫")
        else:
            print("  ‚úÖ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∫–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü–µ—Ä–µ—Ö–æ–¥—ã "direct"
        cur.execute("""
            SELECT COUNT(*) as count 
            FROM users 
            WHERE signup_date >= ? AND source = 'direct'
        """, (week_ago,))
        direct_count = cur.fetchone()['count']
        print(f"  üì± –ü—Ä—è–º—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ (direct): {direct_count}")
        
        conn.close()
        
        print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        if not successful_qr:
            print("  ‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ QR-–∫–æ–¥—ã")
            print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ QR-–∫–æ–¥—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∏ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        if invalid_codes:
            print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–æ–≤")
            print("  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã –∏–∑ –±–∞–∑—ã")
        
        print("  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ QR-–∫–æ–¥–æ–≤' –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        
        return True
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è QR-—Å–∏—Å—Ç–µ–º—ã: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_staff_registration_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ QR-–∫–æ–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞."""
    print("\n=== –¢–ï–°–¢ –ü–†–û–¶–ï–°–°–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ===")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
        conn = database.get_db_connection()
        cur = conn.cursor()
        cur.execute("SELECT * FROM staff WHERE status = 'active' LIMIT 1")
        test_staff = cur.fetchone()
        
        if not test_staff:
            print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º: {test_staff['full_name']} (–∫–æ–¥: {test_staff['unique_code']})")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ)
        staff_code = test_staff['unique_code']
        found_staff = database.find_staff_by_code(staff_code)
        
        if found_staff:
            brought_by_staff_id = found_staff['staff_id']
            source = f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫: {found_staff['short_name']}"
            print(f"  ‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω: ID={brought_by_staff_id}, source='{source}'")
        else:
            print(f"  ‚ùå –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –∫–æ–¥–æ–º {staff_code} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è
        print(f"  üìã –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ:")
        print(f"    ‚Ä¢ brought_by_staff_id: {brought_by_staff_id}")
        print(f"    ‚Ä¢ source: '{source}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–∫–∞–∫ –≤ –æ—Ç—á–µ—Ç–µ)
        tz_moscow = pytz.timezone('Europe/Moscow')
        current_time = datetime.datetime.now(tz_moscow)
        start_time = current_time - datetime.timedelta(hours=1)  # –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
        
        staff_stats = database.get_staff_performance_for_period(start_time, current_time)
        
        if test_staff['position'] in staff_stats:
            for staff_member in staff_stats[test_staff['position']]:
                if staff_member['name'] == test_staff['short_name']:
                    print(f"  üìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {staff_member['brought']} –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π")
                    break
        else:
            print(f"  üìä –£ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ")
        
        conn.close()
        return True
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–æ—Ç–∞ '–ï–≤–≥–µ–Ω–∏—á'\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É QR-–∫–æ–¥–æ–≤
    qr_test_passed = test_staff_qr_system()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    reg_test_passed = test_staff_registration_flow()
    
    print("\n" + "="*50)
    print("üìã –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"  QR-—Å–∏—Å—Ç–µ–º–∞: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if qr_test_passed else '‚ùå –û–®–ò–ë–ö–ò'}")
    print(f"  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if reg_test_passed else '‚ùå –û–®–ò–ë–ö–ò'}")
    
    if qr_test_passed and reg_test_passed:
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ QR-–∫–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("\nüí° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   /admin ‚Üí üìä –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ QR-–∫–æ–¥–æ–≤")
    else:
        print("\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")
    
    print("="*50)
