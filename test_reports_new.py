#!/usr/bin/env python3
# test_reports_new.py - –¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤

import sys
import datetime
import pytz
sys.path.append('.')

import database
from handlers.admin_panel import generate_daily_report_text

def test_current_shift_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø–æ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω–µ."""
    print("üî• –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø–æ –¢–ï–ö–£–©–ï–ô —Å–º–µ–Ω–µ...")
    
    tz_moscow = pytz.timezone('Europe/Moscow')
    current_time = datetime.datetime.now(tz_moscow)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª–æ –¢–ï–ö–£–©–ï–ô —Å–º–µ–Ω—ã
    if current_time.hour >= 12:
        # –¢–µ–∫—É—â–∞—è —Å–º–µ–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å —Å–µ–≥–æ–¥–Ω—è –≤ 12:00
        start_time = current_time.replace(hour=12, minute=0, second=0, microsecond=0)
        end_time = current_time  # –î–æ —Å–µ–π—á–∞—Å
        print(f"–°–º–µ–Ω–∞ –∏–¥–µ—Ç: —Å {start_time} –¥–æ {end_time}")
    else:
        # –¢–µ–∫—É—â–∞—è —Å–º–µ–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤—á–µ—Ä–∞ –≤ 12:00
        start_time = (current_time - datetime.timedelta(days=1)).replace(hour=12, minute=0, second=0, microsecond=0)
        end_time = current_time  # –î–æ —Å–µ–π—á–∞—Å
        print(f"–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: —Å {start_time} –¥–æ {end_time}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    general_stats = database.get_report_data_for_period(start_time, end_time)
    staff_stats = database.get_staff_performance_for_period(start_time, end_time)
    iiko_count = database.get_iiko_nastoika_count_for_date(end_time.date())
    
    print(f"–î–∞–Ω–Ω—ã–µ: –≤—ã–¥–∞–Ω–æ={general_stats[0]}, –ø–æ–≥–∞—à–µ–Ω–æ={general_stats[1]}")
    
    if general_stats[0] > 0:
        report_text = generate_daily_report_text(start_time, end_time, general_stats, staff_stats, iiko_count, is_current_shift=True)
        print("\n" + "="*50)
        print(report_text)
        print("="*50)
    else:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥")

def test_completed_shift_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–º–µ–Ω–µ."""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø–æ –ó–ê–í–ï–†–®–ï–ù–ù–û–ô —Å–º–µ–Ω–µ...")
    
    tz_moscow = pytz.timezone('Europe/Moscow')
    current_time = datetime.datetime.now(tz_moscow)
    
    # –í—Å–µ–≥–¥–∞ –±–µ—Ä–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é —Å–º–µ–Ω—É (–≤—á–µ—Ä–∞—à–Ω—é—é)
    if current_time.hour >= 12:
        # –°–µ–π—á–∞—Å –¥–Ω–µ–≤–Ω–æ–µ –≤—Ä–µ–º—è - –±–µ—Ä–µ–º —Å–º–µ–Ω—É: –≤—á–µ—Ä–∞ 12:00 - —Å–µ–≥–æ–¥–Ω—è 06:00
        end_time = current_time.replace(hour=6, minute=0, second=0, microsecond=0)
        start_time = (current_time - datetime.timedelta(days=1)).replace(hour=12, minute=0, second=0, microsecond=0)
        print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Å–º–µ–Ω–∞: —Å {start_time} –¥–æ {end_time}")
    else:
        # –°–µ–π—á–∞—Å —É—Ç—Ä–æ - –±–µ—Ä–µ–º —Å–º–µ–Ω—É: –ø–æ–∑–∞–≤—á–µ—Ä–∞ 12:00 - –≤—á–µ—Ä–∞ 06:00
        end_time = (current_time - datetime.timedelta(days=1)).replace(hour=6, minute=0, second=0, microsecond=0)
        start_time = (current_time - datetime.timedelta(days=2)).replace(hour=12, minute=0, second=0, microsecond=0)
        print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Å–º–µ–Ω–∞ (—É—Ç—Ä–æ–º): —Å {start_time} –¥–æ {end_time}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    general_stats = database.get_report_data_for_period(start_time, end_time)
    staff_stats = database.get_staff_performance_for_period(start_time, end_time)
    iiko_count = database.get_iiko_nastoika_count_for_date(end_time.date())
    
    print(f"–î–∞–Ω–Ω—ã–µ: –≤—ã–¥–∞–Ω–æ={general_stats[0]}, –ø–æ–≥–∞—à–µ–Ω–æ={general_stats[1]}")
    
    if general_stats[0] > 0:
        report_text = generate_daily_report_text(start_time, end_time, general_stats, staff_stats, iiko_count, is_current_shift=False)
        print("\n" + "="*50)
        print(report_text)
        print("="*50)
    else:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥")

def check_database_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    print("üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è
    tz_moscow = pytz.timezone('Europe/Moscow')
    end_time = datetime.datetime.now(tz_moscow)
    start_time = end_time - datetime.timedelta(days=3)
    
    general_stats = database.get_report_data_for_period(start_time, end_time)
    print(f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è: –≤—ã–¥–∞–Ω–æ={general_stats[0]}, –ø–æ–≥–∞—à–µ–Ω–æ={general_stats[1]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞ –≤—á–µ—Ä–∞
    yesterday = end_time - datetime.timedelta(days=1)
    start_yesterday = yesterday.replace(hour=0, minute=0, second=0, microsecond=0)
    end_yesterday = yesterday.replace(hour=23, minute=59, second=59, microsecond=0)
    
    general_stats_yesterday = database.get_report_data_for_period(start_yesterday, end_yesterday)
    print(f"–ó–∞ –≤—á–µ—Ä–∞ (–≤–µ—Å—å –¥–µ–Ω—å): –≤—ã–¥–∞–Ω–æ={general_stats_yesterday[0]}, –ø–æ–≥–∞—à–µ–Ω–æ={general_stats_yesterday[1]}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤")
    print("="*50)
    
    check_database_data()
    test_current_shift_report()
    test_completed_shift_report()
