# /handlers/steps/admin_steps.py
"""
–ü–æ—à–∞–≥–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π.
"""
def process_find_user_step(bot, admin_states, database, texts):
    def inner(message):
        admin_id = message.from_user.id
        if admin_states.get(admin_id) != 'awaiting_user_identifier':
            return
        identifier = message.text
        user_data = database.find_user_by_id_or_username(identifier)
        if user_data:
            status_map = {
                'registered': '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω', 'issued': '–ö—É–ø–æ–Ω –≤—ã–¥–∞–Ω',
                'redeemed': '–ö—É–ø–æ–Ω –ø–æ–≥–∞—à–µ–Ω', 'redeemed_and_left': '–ü–æ–≥–∞—Å–∏–ª –∏ –æ—Ç–ø–∏—Å–∞–ª—Å—è'
            }
            status_ru = status_map.get(user_data['status'], user_data['status'])
            staff_name = "–ù–µ—Ç"
            if user_data.get('brought_by_staff_id'):
                staff_info = database.find_staff_by_id(user_data['brought_by_staff_id'])
                if staff_info:
                    staff_name = staff_info['short_name']
            response = (f"üë§ **–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**\n\n"
                        f"**ID:** `{user_data['user_id']}`\n"
                        f"**–ò–º—è:** {user_data['first_name']}\n"
                        f"**–Æ–∑–µ—Ä–Ω–µ–π–º:** @{user_data['username'] or '–ù–µ—Ç'}\n"
                        f"**–°—Ç–∞—Ç—É—Å:** {status_ru}\n"
                        f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {user_data['source'] or '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n"
                        f"**–ü—Ä–∏–≥–ª–∞—Å–∏–ª:** {user_data['referrer_id'] or '–ù–∏–∫—Ç–æ'}\n"
                        f"**–ü—Ä–∏–≤–µ–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫:** {staff_name}\n"
                        f"**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {user_data['signup_date'] or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n"
                        f"**–î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è:** {user_data['redeem_date'] or '–ï—â–µ –Ω–µ –ø–æ–≥–∞—à–µ–Ω'}")
            bot.send_message(admin_id, response, parse_mode="Markdown")
        else:
            bot.send_message(admin_id, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º '{identifier}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        if admin_id in admin_states:
            del admin_states[admin_id]
    return inner
