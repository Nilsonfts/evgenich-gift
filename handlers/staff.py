# /handlers/staff.py
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º.
"""
import core.database as database

def handle_staff_callbacks(bot, keyboards):
    @bot.callback_query_handler(func=lambda call: call.data == 'admin_list_staff' or call.data.startswith('admin_toggle_staff_'))
    def staff_callback(call):
        if call.data == 'admin_list_staff':
            all_staff = database.get_all_staff()
            if not all_staff:
                bot.send_message(call.message.chat.id, "–í —Å–∏—Å—Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.")
                return
            bot.delete_message(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, "üìã **–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:**\n(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å)")
            for staff in all_staff:
                status_icon = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if staff['status'] == 'active' else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
                response = f"{staff['full_name']} ({staff['position']})\n–°—Ç–∞—Ç—É—Å: {status_icon} | ID: `{staff['telegram_id']}`"
                bot.send_message(call.message.chat.id, response, parse_mode="Markdown", reply_markup=keyboards.get_staff_management_keyboard(staff['staff_id'], staff['status']))
        elif call.data.startswith('admin_toggle_staff_'):
            parts = call.data.split('_')
            staff_id, new_status = int(parts[3]), parts[4]
            if database.update_staff_status(staff_id, new_status):
                all_staff = database.get_all_staff()
                for s in all_staff:
                    if s['staff_id'] == staff_id:
                        status_icon = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if new_status == 'active' else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
                        new_text = f"{s['full_name']} ({s['position']})\n–°—Ç–∞—Ç—É—Å: {status_icon} | ID: `{s['telegram_id']}`"
                        bot.edit_message_text(new_text, call.message.chat.id, call.message.message_id, parse_mode="Markdown",
                                              reply_markup=keyboards.get_staff_management_keyboard(s['staff_id'], new_status))
                        break
            else:
                bot.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å.", call.message.chat.id, call.message.message_id, reply_markup=None)
