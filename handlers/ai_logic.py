# /handlers/ai_logic.py

import logging
from telebot import types
from tinydb import TinyDB, Query

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º "–º–æ–∑–≥"
from ai_assistant import get_ai_recommendation
from menu_nastoiki import MENU_DATA
from food_menu import FOOD_MENU_DATA

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–µ–∫—Å—Ç—ã –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from g_sheets import log_conversation_turn, get_conversation_history, get_daily_updates
import texts
import keyboards

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–æ–π –∂–µ –ë–î, —á—Ç–æ –∏ –≤ booking_flow, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ —é–∑–µ—Ä
db = TinyDB('booking_data.json')
User = Query()

def register_ai_handlers(bot):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –∏ –¥—Ä—É–≥–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫.
    """
    
    # --- –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–∞—Å–∫–∏—Ä—É—é—Ç—Å—è –ø–æ–¥ —Ç–µ–∫—Å—Ç ---
    
    @bot.message_handler(func=lambda message: message.text == "üó£ –°–ø—Ä–æ—Å–∏ —É –ï–≤–≥–µ–Ω–∏—á–∞")
    def handle_ai_prompt_button(message: types.Message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É-–ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –ò–ò."""
        if db.contains(User.user_id == message.from_user.id):
            bot.reply_to(message, texts.BOOKING_IN_PROGRESS_TEXT)
            return
        bot.reply_to(message, texts.AI_PROMPT_HINT)

    # --- –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
    # –û–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã
    
    @bot.message_handler(content_types=['text'])
    def handle_text_query(message: types.Message):
        user_id = message.from_user.id
        user_text = message.text

        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        if db.contains(User.user_id == user_id):
            # –ï—Å–ª–∏ –¥–∞, —Ç–æ —ç—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å.
            # –õ–æ–≥–∏–∫–∞ register_next_step_handler –≤ booking_flow —Å–∞–º–∞ –≤—Å—ë –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç.
            return
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π –∏–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        # –≠—Ç–æ "–∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É—Ä–∞–∫–∞", —á—Ç–æ–±—ã AI –Ω–µ –æ—Ç–≤–µ—á–∞–ª –Ω–∞ "üìñ –ú–µ–Ω—é" –∏ —Ç.–ø.
        known_buttons = [
            'üìñ –ú–µ–Ω—é', 'ü§ù –ü—Ä–∏–≤–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∏—â–∞', 'üó£ –°–ø—Ä–æ—Å–∏ —É –ï–≤–≥–µ–Ω–∏—á–∞', 
            'ü•É –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ–π–∫—É –ø–æ —Ç–∞–ª–æ–Ω—É', 'üìç –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª'
        ]
        if user_text.startswith('/') or user_text in known_buttons:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥—Ä—É–≥–∏–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏
            return 
        
        # 3. –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏–∫—É AI
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å AI: '{user_text}'")
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets
        log_conversation_turn(user_id, "user", user_text)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Å—Ç–æ–ø-–ª–∏—Å—Ç/—Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        history = get_conversation_history(user_id, limit=6)
        daily_updates = get_daily_updates()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ï–≤–≥–µ–Ω–∏—á –ø–µ—á–∞—Ç–∞–µ—Ç..."
        bot.send_chat_action(message.chat.id, 'typing')

        # –í—ã–∑—ã–≤–∞–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç—å
        ai_response = get_ai_recommendation(
            user_query=user_text,
            conversation_history=history,
            menu_data=MENU_DATA,
            food_menu_data=FOOD_MENU_DATA,
            daily_updates=daily_updates
        )
        
        # 4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        if "[START_BOOKING_FLOW]" in ai_response:
            # –ï—Å–ª–∏ AI —Ä–µ—à–∏–ª, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –±—Ä–æ–Ω—å, –∑–∞–ø—É—Å–∫–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–ª–æ—É
            logging.info(f"AI –æ–ø—Ä–µ–¥–µ–ª–∏–ª –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")
            log_conversation_turn(user_id, "assistant", "–ü—Ä–µ–¥–ª–æ–∂–∏–ª –≤–∞—Ä–∏–∞–Ω—Ç—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.")
            bot.send_message(
                message.chat.id, 
                texts.BOOKING_PROMPT_TEXT, 
                reply_markup=keyboards.get_booking_options_keyboard()
            )
        else:
            # –ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            log_conversation_turn(user_id, "assistant", ai_response)
            bot.reply_to(message, ai_response, parse_mode="Markdown")
