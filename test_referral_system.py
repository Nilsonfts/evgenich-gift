#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""
import os
import sys
import sqlite3
import logging
from datetime import datetime, timedelta
import pytz

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['BOT_TOKEN'] = 'dummy'
os.environ['CHANNEL_ID'] = '-100000000'
os.environ['ADMIN_IDS'] = '123456789'
os.environ['BOSS_IDS'] = '123456789'
os.environ['HELLO_STICKER_ID'] = 'dummy'
os.environ['NASTOYKA_STICKER_ID'] = 'dummy' 
os.environ['THANK_YOU_STICKER_ID'] = 'dummy'

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º database
import database

def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    try:
        print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É
        database.init_db()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ (–ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—è)
        referrer_id = 100001
        database.add_new_user(
            user_id=referrer_id,
            username="referrer_user",
            first_name="–ê–ª–µ–∫—Å",
            source="direct"
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Ä–µ—Ñ–µ—Ä–µ—Ä: {referrer_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
        current_time = datetime.now(pytz.utc)
        
        # –†–µ—Ñ–µ—Ä–∞–ª 1: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è 3 –¥–Ω—è –Ω–∞–∑–∞–¥, –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É 
        ref1_id = 200001
        ref1_signup = current_time - timedelta(days=3)
        database.add_new_user(
            user_id=ref1_id,
            username="friend1",
            first_name="–ú–∞—Ä–∏—è",
            source="referral",
            referrer_id=referrer_id
        )
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ–≥–∞—à–µ–Ω–∏—è
        conn = database.get_db_connection()
        cur = conn.cursor()
        cur.execute("""
            UPDATE users 
            SET signup_date = ?, redeem_date = ?
            WHERE user_id = ?
        """, (ref1_signup.isoformat(), (current_time - timedelta(days=1)).isoformat(), ref1_id))
        conn.commit()
        conn.close()
        print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª 1: {ref1_id} (–≥–æ—Ç–æ–≤ –∫ –Ω–∞–≥—Ä–∞–¥–µ - 72 —á–∞—Å–∞)")
        
        # –†–µ—Ñ–µ—Ä–∞–ª 2: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è 1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥, –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É
        ref2_id = 200002
        ref2_signup = current_time - timedelta(days=1)
        database.add_new_user(
            user_id=ref2_id,
            username="friend2",
            first_name="–ò–≤–∞–Ω",
            source="referral",
            referrer_id=referrer_id
        )
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ–≥–∞—à–µ–Ω–∏—è
        conn = database.get_db_connection()
        cur = conn.cursor()
        cur.execute("""
            UPDATE users 
            SET signup_date = ?, redeem_date = ?
            WHERE user_id = ?
        """, (ref2_signup.isoformat(), current_time.isoformat(), ref2_id))
        conn.commit()
        conn.close()
        print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª 2: {ref2_id} (–æ–∂–∏–¥–∞–Ω–∏–µ 24 —á–∞—Å–∞)")
        
        # –†–µ—Ñ–µ—Ä–∞–ª 3: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–µ–¥–∞–≤–Ω–æ, –ù–ï –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É
        ref3_id = 200003
        ref3_signup = current_time - timedelta(hours=12)
        database.add_new_user(
            user_id=ref3_id,
            username="friend3",
            first_name="–ê–Ω–Ω–∞",
            source="referral",
            referrer_id=referrer_id
        )
        # –¢–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        conn = database.get_db_connection()
        cur = conn.cursor()
        cur.execute("""
            UPDATE users 
            SET signup_date = ?
            WHERE user_id = ?
        """, (ref3_signup.isoformat(), ref3_id))
        conn.commit()
        conn.close()
        print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª 3: {ref3_id} (–Ω–µ –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É)")
        
        return referrer_id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def test_referral_functions(referrer_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    try:
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ {referrer_id}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = database.get_referral_stats(referrer_id)
        if stats:
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:")
            print(f"  ‚Ä¢ –í—Å–µ–≥–æ: {stats['total']}")
            print(f"  ‚Ä¢ –ü–æ–ª—É—á–∏–ª–∏ –Ω–∞—Å—Ç–æ–π–∫—É: {stats['redeemed']}")
            print(f"  ‚Ä¢ –ù–∞–≥—Ä–∞–¥ –ø–æ–ª—É—á–µ–Ω–æ: {stats['rewarded']}")
            print(f"  ‚Ä¢ –û–∂–∏–¥–∞—é—Ç –Ω–∞–≥—Ä–∞–¥—ã: {len(stats['pending'])}")
            
            print("\nüîç –î–µ—Ç–∞–ª–∏ –æ–∂–∏–¥–∞—é—â–∏—Ö:")
            for ref in stats['pending']:
                status = "‚úÖ –ì–æ—Ç–æ–≤" if ref['can_claim'] else f"‚è∞ –û—Å—Ç–∞–ª–æ—Å—å {ref['hours_left']}—á"
                print(f"  ‚Ä¢ {ref['first_name']}: {status}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤ –Ω–∞ –Ω–∞–≥—Ä–∞–¥—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        ref1_id = 200001
        eligible, reason = database.check_referral_reward_eligibility(referrer_id, ref1_id)
        print(f"\nüéÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ {ref1_id}:")
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ' if eligible else '‚ùå'} {reason}")
        
        if eligible:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–¥–∞—á—É –Ω–∞–≥—Ä–∞–¥—ã
            success = database.mark_referral_rewarded(referrer_id, ref1_id)
            print(f"  –í—ã–¥–∞—á–∞ –Ω–∞–≥—Ä–∞–¥—ã: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –≥–æ—Ç–æ–≤)
        ref2_id = 200002
        eligible2, reason2 = database.check_referral_reward_eligibility(referrer_id, ref2_id)
        print(f"\nüéÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ {ref2_id}:")
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ' if eligible2 else '‚ùå'} {reason2}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ—Ç—å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–Ω–µ –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É)
        ref3_id = 200003
        eligible3, reason3 = database.check_referral_reward_eligibility(referrer_id, ref3_id)
        print(f"\nüéÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ {ref3_id}:")
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ' if eligible3 else '‚ùå'} {reason3}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats_after = database.get_referral_stats(referrer_id)
        if stats_after:
            print(f"\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"  ‚Ä¢ –ù–∞–≥—Ä–∞–¥ –ø–æ–ª—É—á–µ–Ω–æ: {stats_after['rewarded']}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    referrer_id = create_test_data()
    
    if referrer_id:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
        success = test_referral_functions(referrer_id)
        
        if success:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
            print("\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±–æ—Ç–µ:")
            print(f"   1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /friend –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–∏–≤–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∏—â–∞'")
            print(f"   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∫–Ω–æ–ø–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥")
        else:
            print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
