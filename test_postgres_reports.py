#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å Google Sheets –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
–°–†–û–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï
"""
import os
import sys
import logging
from datetime import datetime
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('/workspaces/evgenich-gift')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
os.environ.update({
    'BOT_TOKEN': 'test_token',
    'CHANNEL_ID': '-1001234567890',
    'ADMIN_IDS': '123456789',
    'BOSS_IDS': '123456789',
    'HELLO_STICKER_ID': 'test_hello_sticker',
    'NASTOYKA_STICKER_ID': 'test_nastoyka_sticker',
    'THANK_YOU_STICKER_ID': 'test_thank_you_sticker',
    'FRIEND_BONUS_STICKER_ID': 'test_friend_sticker',
    'MENU_URL': 'https://test-menu.com',
    'USE_POSTGRES': 'false',  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ SQLite
    'DATABASE_PATH': '/tmp/test_reports.db',
    'LOG_LEVEL': 'DEBUG'
})

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def check_google_sheets_setup():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É Google Sheets"""
    print("üîç –ü–†–û–í–ï–†–ö–ê GOOGLE SHEETS SETUP")
    print("=" * 40)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\n1Ô∏è‚É£ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    google_vars = {
        'GOOGLE_SHEET_KEY': os.getenv('GOOGLE_SHEET_KEY'),
        'GOOGLE_SHEET_KEY_SECONDARY': os.getenv('GOOGLE_SHEET_KEY_SECONDARY'), 
        'GOOGLE_CREDENTIALS_JSON': os.getenv('GOOGLE_CREDENTIALS_JSON')
    }
    
    for var, value in google_vars.items():
        if value:
            print(f"   ‚úÖ {var} = {str(value)[:30]}...")
        else:
            print(f"   ‚ùå {var} = –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê!")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    print("\n2Ô∏è‚É£ –§–∞–π–ª—ã:")
    files_to_check = [
        'google_creds.json',
        'credentials.json',
        'service-account-key.json'
    ]
    
    for file_path in files_to_check:
        if os.path.exists(file_path):
            size = os.path.getsize(file_path)
            print(f"   ‚úÖ {file_path} ({size} bytes)")
        else:
            print(f"   ‚ùå {file_path} - –ù–ï –ù–ê–ô–î–ï–ù")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    print("\n3Ô∏è‚É£ –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π:")
    try:
        import gspread
        print("   ‚úÖ gspread")
    except ImportError as e:
        print(f"   ‚ùå gspread: {e}")
    
    try:
        from google.oauth2.service_account import Credentials
        print("   ‚úÖ google.oauth2")
    except ImportError as e:
        print(f"   ‚ùå google.oauth2: {e}")
    
    return any(google_vars.values())

def check_database_functions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 40)
    
    try:
        import database
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
        print("1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        database.init_db()
        print("   ‚úÖ –ë–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 888888888
        print(f"2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}...")
        database.add_new_user(
            user_id=test_user_id,
            username="test_reports_user",
            first_name="–¢–µ—Å—Ç –†–µ–ø–æ—Ä—Ç–æ–≤",
            source="test_reports"
        )
        print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
        
        # –í—ã–¥–∞—á–∞ –∫—É–ø–æ–Ω–∞
        test_coupon = "TESTREPORT123"
        print(f"3Ô∏è‚É£ –í—ã–¥–∞—á–∞ –∫—É–ø–æ–Ω–∞ {test_coupon}...")
        coupon_added = database.add_coupon_to_user(test_user_id, test_coupon)
        print(f"   {'‚úÖ' if coupon_added else '‚ö†Ô∏è'} –ö—É–ø–æ–Ω –≤—ã–¥–∞–Ω: {coupon_added}")
        
        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("4Ô∏è‚É£ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        activation_result = database.activate_user(test_user_id)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {activation_result}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print("5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        stats = database.get_stats()
        if stats:
            print(f"   üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('total_users', 0)}")
            print(f"   üìä –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats.get('activated_users', 0)}")
            print(f"   üìä –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {stats.get('inactive_users', 0)}")
        else:
            print("   ‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        try:
            recent_users = database.get_recent_activated_users(limit=5)
            if recent_users:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recent_users)} –Ω–µ–¥–∞–≤–Ω–∏—Ö –∞–∫—Ç–∏–≤–∞—Ü–∏–π")
                for user in recent_users[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 3
                    print(f"      - {user.get('user_id')} (@{user.get('username', 'N/A')})")
            else:
                print("   ‚ö†Ô∏è –ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö –∞–∫—Ç–∏–≤–∞—Ü–∏–π")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {e}")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ë–î: {e}")
        logging.error(f"Database error: {e}", exc_info=True)
        return False

def check_google_sheets_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Google Sheets"""
    print("\nüìä –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò GOOGLE SHEETS")
    print("=" * 40)
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
        print("1Ô∏è‚É£ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —ç–∫—Å–ø–æ—Ä—Ç–∞...")
        try:
            import export_to_sheets
            print("   ‚úÖ export_to_sheets –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            print(f"   ‚ùå export_to_sheets: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ database.py
        print("2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ database.py...")
        import database
        import inspect
        
        # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å Google Sheets
        db_functions = [func for func in dir(database) if 'sheet' in func.lower() or 'google' in func.lower() or 'export' in func.lower()]
        if db_functions:
            print(f"   üìã –ù–∞–π–¥–µ–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏: {db_functions}")
        else:
            print("   ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ database.py –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –∏—â–µ–º –≤—ã–∑–æ–≤—ã Google Sheets
        print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ activate_user...")
        if hasattr(database, 'activate_user'):
            source_code = inspect.getsource(database.activate_user)
            if 'sheet' in source_code.lower() or 'google' in source_code.lower() or 'export' in source_code.lower():
                print("   ‚úÖ –í activate_user –µ—Å—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Google Sheets")
            else:
                print("   ‚ùå –í activate_user –ù–ï–¢ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ Google Sheets!")
                print("   üîß –≠–¢–û –ú–û–ñ–ï–¢ –ë–´–¢–¨ –ü–†–û–ë–õ–ï–ú–ê!")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_handlers_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏"""
    print("\nüîß –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í")
    print("=" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º callback_query.py
        print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ handlers/callback_query.py...")
        if os.path.exists('handlers/callback_query.py'):
            with open('handlers/callback_query.py', 'r', encoding='utf-8') as f:
                content = f.read()
                
            if 'redeem_coupon' in content:
                print("   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è redeem_coupon")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –≤—ã–∑–æ–≤—ã Google Sheets
                if 'sheet' in content.lower() or 'google' in content.lower() or 'export' in content.lower():
                    print("   ‚úÖ –í callback_query –µ—Å—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Google Sheets")
                else:
                    print("   ‚ùå –í callback_query –ù–ï–¢ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ Google Sheets!")
            else:
                print("   ‚ùå –§—É–Ω–∫—Ü–∏—è redeem_coupon –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –§–∞–π–ª handlers/callback_query.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ handlers
        print("2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
        handlers_files = [
            'handlers/user_commands.py',
            'handlers/users.py',
            'handlers/content.py'
        ]
        
        for handler_file in handlers_files:
            if os.path.exists(handler_file):
                with open(handler_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                if 'activate_user' in content or 'redeem' in content:
                    print(f"   üìã {handler_file}: –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
                    
                    if 'sheet' in content.lower() or 'google' in content.lower() or 'export' in content.lower():
                        print(f"      ‚úÖ –ï—Å—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Google Sheets")
                    else:
                        print(f"      ‚ùå –ù–ï–¢ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ Google Sheets!")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ handlers: {e}")
        return False

def diagnose_and_fix():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üö® –°–†–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° GOOGLE SHEETS")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    google_sheets_ok = check_google_sheets_setup()
    database_ok = check_database_functions() 
    sheets_integration_ok = check_google_sheets_integration()
    handlers_ok = check_handlers_integration()
    
    print("\n" + "=" * 60)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"   üìä Google Sheets setup: {'‚úÖ' if google_sheets_ok else '‚ùå'}")
    print(f"   üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if database_ok else '‚ùå'}")
    print(f"   üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Sheets: {'‚úÖ' if sheets_integration_ok else '‚ùå'}")
    print(f"   üîß Handlers: {'‚úÖ' if handlers_ok else '‚ùå'}")
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
    print("\nüîß –ü–õ–ê–ù –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    
    if not google_sheets_ok:
        print("1Ô∏è‚É£ –ù–ê–°–¢–†–û–ò–¢–¨ Google Sheets:")
        print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ GOOGLE_SHEET_KEY –∏ GOOGLE_CREDENTIALS_JSON")
        print("   - –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ —Ñ–∞–π–ª credentials —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    if not sheets_integration_ok:
        print("2Ô∏è‚É£ –ò–°–ü–†–ê–í–ò–¢–¨ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é:")
        print("   - –î–æ–±–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é activate_user()")
        print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π —ç–∫—Å–ø–æ—Ä—Ç–∞")
    
    if not handlers_ok:
        print("3Ô∏è‚É£ –û–ë–ù–û–í–ò–¢–¨ handlers:")
        print("   - –î–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –≤ Google Sheets –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –º–µ—Å—Ç–∞ –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω–∏–µ –∫—É–ø–æ–Ω–æ–≤")
    
    print("\n‚ö° –°–µ–π—á–∞—Å –Ω–∞—á–∏–Ω–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...")
    
    return {
        'google_sheets_ok': google_sheets_ok,
        'database_ok': database_ok,
        'sheets_integration_ok': sheets_integration_ok,
        'handlers_ok': handlers_ok
    }

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å—Ä–æ—á–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤...")
    result = diagnose_and_fix()
    
    if not all(result.values()):
        print("\nüö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´! –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.")
    else:
        print("\n‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    
    print("\nüèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")