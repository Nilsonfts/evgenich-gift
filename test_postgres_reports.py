#!/usr/bin/env python3
"""
–¢–µ—Å—Ç PostgreSQL —Ñ—É–Ω–∫—Ü–∏–π –æ—Ç—á–µ—Ç–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
os.environ['BOT_TOKEN'] = 'test_token'
os.environ['CHANNEL_ID'] = '123'
os.environ['ADMIN_IDS'] = '123'
os.environ['HELLO_STICKER_ID'] = 'test'
os.environ['NASTOYKA_STICKER_ID'] = 'test'
os.environ['THANK_YOU_STICKER_ID'] = 'test'
os.environ['USE_POSTGRES'] = 'true'  # –í–∫–ª—é—á–∞–µ–º PostgreSQL

from datetime import datetime
from config import USE_POSTGRES
import database

def test_postgres_reports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç PostgreSQL —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤"""
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï POSTGRESQL –û–¢–ß–ï–¢–û–í")
    print("=" * 50)
    
    print(f"USE_POSTGRES: {USE_POSTGRES}")
    print(f"pg_client –¥–æ—Å—Ç—É–ø–µ–Ω: {database.pg_client is not None}")
    
    # –ü–µ—Ä–∏–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    start_time = datetime(2025, 8, 8, 12, 0)
    end_time = datetime(2025, 8, 8, 17, 1)  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    
    print(f"üìÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥: {start_time.strftime('%d.%m %H:%M')} - {end_time.strftime('%d.%m %H:%M')}")
    print()
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º PostgreSQL —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é
        if database.pg_client:
            print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—ã–µ –≤—ã–∑–æ–≤—ã –∫ PostgreSQL...")
            
            # –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –∫ pg_client
            pg_result = database.pg_client.get_report_data_for_period(start_time, end_time)
            print(f"üìä PostgreSQL —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {pg_result}")
            
            pg_churn = database.pg_client.get_daily_churn_data(start_time, end_time)
            print(f"üìâ PostgreSQL –æ—Ç—Ç–æ–∫: {pg_churn}")
        
        print()
        print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ database.py...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        general_stats = database.get_report_data_for_period(start_time, end_time)
        issued, redeemed, _, sources, total_time = general_stats
        
        print(f"‚úÖ –í—ã–¥–∞–Ω–æ –ø–æ–¥–∞—Ä–∫–æ–≤: {issued}")
        print(f"‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥–∞—Ä–∫–æ–≤: {redeemed}")
        print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {sources}")
        print(f"‚úÖ –í—Ä–µ–º—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {total_time} —Å–µ–∫.")
        
        churn_data = database.get_daily_churn_data(start_time, end_time)
        print(f"‚úÖ –û—Ç—Ç–æ–∫: –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ {churn_data[0]}, —É—à–ª–æ {churn_data[1]}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if issued == 0:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ï –†–ï–®–ï–ù–ê")
            print("PostgreSQL —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –Ω–∞—Ö–æ–¥—è—Ç –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚úÖ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!")
            print(f"PostgreSQL –Ω–∞—à–µ–ª {issued} –≤—ã–¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞ –ø–µ—Ä–∏–æ–¥")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_postgres_reports()
