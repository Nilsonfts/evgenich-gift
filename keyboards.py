# keyboards.py
from telebot import types
from config import ADMIN_IDS, MENU_URL
from menu_nastoiki import MENU_DATA
from food_menu import FOOD_MENU_DATA

# === –û–°–ù–û–í–ù–´–ï REPLY-–ö–õ–ê–í–ò–ê–¢–£–†–´ ===

def get_main_menu_keyboard(user_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu_button = types.KeyboardButton("üìñ –ú–µ–Ω—é")
    friend_button = types.KeyboardButton("ü§ù –ü—Ä–∏–≤–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∏—â–∞")
    book_button = types.KeyboardButton("üìç –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª")
    ai_help_button = types.KeyboardButton("üó£ –°–ø—Ä–æ—Å–∏ —É –ï–≤–≥–µ–Ω–∏—á–∞")
    
    keyboard.row(menu_button, friend_button)
    keyboard.row(ai_help_button, book_button)
    
    if user_id in ADMIN_IDS:
        # –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω —ç–º–æ–¥–∑–∏
        admin_button = types.KeyboardButton("üëë –∞–¥–º–∏–Ω–∫–∞")
        keyboard.row(admin_button)
        
    return keyboard

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...

# === INLINE-–ö–õ–ê–í–ò–ê–¢–£–†–´ –î–õ–Ø –ú–ï–ù–Æ (–° –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï–ú –ö–ù–û–ü–ö–ò "–ù–ê–ó–ê–î") ===

def get_menu_choice_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –º–µ–Ω—é (–Ω–∞—Å—Ç–æ–π–∫–∏ –∏–ª–∏ –∫—É—Ö–Ω—è)."""
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    nastoiki_button = types.InlineKeyboardButton(text="ü•É –ú–µ–Ω—é –Ω–∞—Å—Ç–æ–µ–∫", callback_data="menu_nastoiki_main")
    food_button = types.InlineKeyboardButton(text="üçî –ú–µ–Ω—é –∫—É—Ö–Ω–∏", callback_data="menu_food_main")
    full_menu_button = types.InlineKeyboardButton(text="üìÑ –ü–æ–ª–Ω–æ–µ –º–µ–Ω—é (–°–∞–π—Ç)", url=MENU_URL)
    keyboard.add(nastoiki_button, food_button, full_menu_button)
    return keyboard

def get_nastoiki_categories_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –Ω–∞—Å—Ç–æ–µ–∫ –ò –ö–ù–û–ü–ö–û–ô –ù–ê–ó–ê–î."""
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    buttons = [
        types.InlineKeyboardButton(text=category['title'], callback_data=f"menu_category_{index}")
        for index, category in enumerate(MENU_DATA)
    ]
    keyboard.add(*buttons)
    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.add(types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–µ–Ω—é", callback_data="main_menu_choice"))
    return keyboard

def get_food_categories_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∫—É—Ö–Ω–∏ –ò –ö–ù–û–ü–ö–û–ô –ù–ê–ó–ê–î."""
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    buttons = [
        types.InlineKeyboardButton(text=category, callback_data=f"food_category_{category}")
        for category in FOOD_MENU_DATA.keys()
    ]
    keyboard.add(*buttons)
    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.add(types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–µ–Ω—é", callback_data="main_menu_choice"))
    return keyboard

# ... (–≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —è –∏—Ö –ø—Ä–∏–≤–æ–∂—É –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã) ...

def get_nastoiki_items_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–Ω–∞–∑–∞–¥' –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç–æ–µ–∫."""
    keyboard = types.InlineKeyboardMarkup()
    back_button = types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="menu_nastoiki_main")
    keyboard.add(back_button)
    return keyboard

def get_food_items_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–Ω–∞–∑–∞–¥' –¥–ª—è –º–µ–Ω—é –∫—É—Ö–Ω–∏."""
    keyboard = types.InlineKeyboardMarkup()
    back_button = types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∫—É—Ö–Ω–∏", callback_data="menu_food_main")
    keyboard.add(back_button)
    return keyboard

# ... (booking keyboards) ...
def get_booking_options_keyboard():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", callback_data="booking_phone"),
        types.InlineKeyboardButton("üåê –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Å–∞–π—Ç", callback_data="booking_site"),
        types.InlineKeyboardButton("üîê –ù–∞–ø–∏—Å–∞—Ç—å –≤ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç", callback_data="booking_secret"),
        types.InlineKeyboardButton("ü§ñ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –º–µ–Ω—è", callback_data="booking_bot")
    )
    return markup

def get_booking_confirmation_keyboard():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("‚úÖ –í—Å—ë –≤–µ—Ä–Ω–æ!", callback_data="confirm_booking"),
        types.InlineKeyboardButton("‚ùå –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="cancel_booking")
    )
    return markup

def get_secret_chat_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="üëâ –ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç", url="https://t.me/stolik_evgenicha")
    keyboard.add(url_button)
    return keyboard

# === –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ ===
def get_boss_main_keyboard(settings: dict):
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    group_bonus_promo = settings['promotions']['group_bonus']
    group_bonus_status = "‚úÖ –í–ö–õ" if group_bonus_promo['is_active'] else "‚ùå –í–´–ö–õ"
    group_bonus_button = types.InlineKeyboardButton(
        f"–ë–æ–Ω—É—Å –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏: {group_bonus_status}",
        callback_data="boss_toggle_promotions.group_bonus.is_active"
    )
    happy_hours_promo = settings['promotions']['happy_hours']
    happy_hours_status = "‚úÖ –í–ö–õ" if happy_hours_promo['is_active'] else "‚ùå –í–´–ö–õ"
    happy_hours_button = types.InlineKeyboardButton(
        f"–°—á–∞—Å—Ç–ª–∏–≤—ã–µ —á–∞—Å—ã: {happy_hours_status}",
        callback_data="boss_toggle_promotions.happy_hours.is_active"
    )
    password_promo = settings['promotions']['password_of_the_day']
    password_status = "‚úÖ –í–ö–õ" if password_promo['is_active'] else "‚ùå –í–´–ö–õ"
    password_toggle_button = types.InlineKeyboardButton(
        f"–ü–∞—Ä–æ–ª—å –¥–Ω—è: {password_status}",
        callback_data="boss_toggle_promotions.password_of_the_day.is_active"
    )
    password_set_button = types.InlineKeyboardButton(
        "ü§´ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å –∏ –±–æ–Ω—É—Å",
        callback_data="boss_set_password"
    )
    keyboard.add(group_bonus_button, happy_hours_button, password_toggle_button, password_set_button)
    return keyboard
