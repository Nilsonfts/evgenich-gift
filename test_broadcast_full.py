#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–æ–∫ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('/workspaces/evgenich-gift')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
os.environ.update({
    'BOT_TOKEN': 'test_token',
    'CHANNEL_ID': '-1001234567890',
    'ADMIN_IDS': '123456789',
    'BOSS_IDS': '123456789',
    'IIKO_LOGIN': 'test',
    'IIKO_PASSWORD': 'test',
    'HELLO_STICKER_ID': 'test_hello_sticker',
    'NASTOYKA_STICKER_ID': 'test_nastoyka_sticker',
    'THANK_YOU_STICKER_ID': 'test_thank_you_sticker',
    'FRIEND_BONUS_STICKER_ID': 'test_friend_sticker',
    'MENU_URL': 'https://test-menu.com',
    'DATABASE_PATH': '/tmp/test_broadcast_full.db',
    'USE_POSTGRES': 'false'
})

import logging
logging.basicConfig(level=logging.INFO)

def test_full_broadcast_system():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å—Å—ã–ª–æ–∫
    """
    print("üöÄ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–ê–°–°–´–õ–û–ö")
    print("=" * 50)
    
    try:
        # 1. –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
        print("\nüì¶ 1. –ò–ú–ü–û–†–¢ –ú–û–î–£–õ–ï–ô")
        import database
        from handlers.broadcast import register_broadcast_handlers
        import keyboards
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        print("\nüóÑÔ∏è 2. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•")
        database.init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüë• 3. –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        test_users = [
            {'user_id': 111111, 'username': 'user1', 'first_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å1'},
            {'user_id': 222222, 'username': 'user2', 'first_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å2'},
            {'user_id': 333333, 'username': 'user3', 'first_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å3'},
            {'user_id': 444444, 'username': 'user4', 'first_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å4'},
            {'user_id': 555555, 'username': 'user5', 'first_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å5'},
        ]
        
        for user in test_users:
            database.add_new_user(
                user_id=user['user_id'],
                username=user['username'],
                first_name=user['first_name'],
                source='test_broadcast'
            )
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(test_users)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞—Å—Å—ã–ª–∫–∏
        print("\nüìä 4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–ô –†–ê–°–°–´–õ–ö–ò")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        users_for_broadcast = database.get_all_users_for_broadcast()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {len(users_for_broadcast)}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫
        stats = database.get_broadcast_statistics()
        if stats:
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   - –í—Å–µ–≥–æ: {stats['total']}")
            print(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']}")
            print(f"   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['blocked']}")
        else:
            print("‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
        
        # 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüö´ 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–õ–û–ö–ò–†–û–í–ö–ò")
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        database.mark_user_blocked(111111)
        database.mark_user_blocked(222222)
        print("‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ 2 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats_after_block = database.get_broadcast_statistics()
        users_after_block = database.get_all_users_for_broadcast()
        
        print(f"‚úÖ –ü–æ—Å–ª–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:")
        print(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_after_block)}")
        print(f"   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats_after_block['blocked']}")
        
        # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
        print("\n‚å®Ô∏è 6. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–õ–ê–í–ò–ê–¢–£–†")
        
        try:
            # –ì–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é
            main_keyboard = keyboards.get_admin_main_menu()
            print("‚úÖ –ì–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–æ")
            
            # –ú–µ–Ω—é —Ä–∞—Å—Å—ã–ª–æ–∫
            broadcast_keyboard = keyboards.get_admin_broadcasts_menu()
            print("‚úÖ –ú–µ–Ω—é —Ä–∞—Å—Å—ã–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {e}")
        
        # 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        print("\nüîß 7. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í")
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç bot –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            class MockBot:
                def message_handler(self, **kwargs):
                    def decorator(func):
                        print(f"   üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω message_handler: {func.__name__}")
                        return func
                    return decorator
                
                def callback_query_handler(self, **kwargs):
                    def decorator(func):
                        print(f"   üîò –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω callback_handler: {func.__name__}")
                        return func
                    return decorator
            
            mock_bot = MockBot()
            register_broadcast_handlers(mock_bot)
            print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        
        # 8. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print("\nüìã 8. –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
        final_stats = database.get_broadcast_statistics()
        final_users = database.get_all_users_for_broadcast()
        
        print(f"üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   üìà –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {final_stats['total']}")
        print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö (–ø–æ–ª—É—á–∞—Ç —Ä–∞—Å—Å—ã–ª–∫—É): {final_stats['active']}")
        print(f"   üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {final_stats['blocked']}")
        print(f"   üÜï –ó–∞ 30 –¥–Ω–µ–π: {final_stats['recent_30d']}")
        print(f"   üéØ –û—Ö–≤–∞—Ç —Ä–∞—Å—Å—ã–ª–∫–∏: {round(final_stats['active']/final_stats['total']*100, 1)}%")
        
        print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
        for user in final_users:
            print(f"   ‚Ä¢ {user['user_id']} (@{user['username']}) - {user['first_name']}")
        
        print("\nüéâ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–ê–°–°–´–õ–û–ö –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("=" * 50)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ–∑–¥–∞—é—Ç—Å—è")
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω—É!")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False
    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            if os.path.exists('/tmp/test_broadcast_full.db'):
                os.remove('/tmp/test_broadcast_full.db')
                print("\nüßπ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")
        except:
            pass

if __name__ == "__main__":
    success = test_full_broadcast_system()
    sys.exit(0 if success else 1)
