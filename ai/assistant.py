# /ai/assistant.py
"""
AI-–ª–æ–≥–∏–∫–∞ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI.
"""
import logging
from ai.knowledge import find_relevant_info
import openai

logger = logging.getLogger("evgenich_ai")

# --- PUBLIC API ---
def get_ai_recommendation(
    user_query: str,
    conversation_history: list[dict[str, str]] | None = None,
    *,
    daily_updates: dict[str, str] | None = None,
    user_concept: str = "evgenich",
    model: str = "gpt-4o",
    temperature: float = 0.85,
    max_tokens: int = 200,
) -> str:
    logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: %s", user_query)
    relevant_context = find_relevant_info(user_query)
    logger.info("–ù–∞–π–¥–µ–Ω–Ω—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: %s", relevant_context)
    updates_string = f"–°–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è: {daily_updates.get('special', '–Ω–µ—Ç')}. –í —Å—Ç–æ–ø‚Äë–ª–∏—Å—Ç–µ: {daily_updates.get('stop-list', '–Ω–∏—á–µ–≥–æ')}" if daily_updates else "–Ω–µ—Ç –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
    messages: list[dict[str, str]] = [
        {"role": "system", "content": create_system_prompt(updates_string, user_concept)}
    ]
    if conversation_history:
        messages.extend(conversation_history[-10:])  # —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
    user_content = (
        f"–í–æ—Ç –º–æ–π –≤–æ–ø—Ä–æ—Å: '{user_query}'\n\n"
        f"–ê –≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é —è –Ω–∞—à–µ–ª –¥–ª—è –æ—Ç–≤–µ—Ç–∞:\n---\n{relevant_context}\n---\n"
        "–ü–æ–º–æ–≥–∏ –º–Ω–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –¥—É—à–µ–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ç–≤–æ—ë–º —Å—Ç–∏–ª–µ."
    )
    messages.append({"role": "user", "content": user_content})
    try:
        logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ OpenAI API‚Ä¶")
        completion = openai.chat.completions.create(
            model=model,
            messages=messages,
            temperature=temperature,
            max_tokens=max_tokens,
        )
        response_text = completion.choices[0].message.content
        logger.info("–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
        return response_text.strip().strip('"')
    except Exception as exc:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API: %s", exc)
        with open("ai_failed_queries.log", "a") as f:
            f.write(f"{user_query}\n")
        return "–¢–æ–≤–∞—Ä–∏—â, –º–æ–π –º—ã—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç –¥–∞–ª —Å–±–æ–π. –ü—Ä–æ–≤–æ–¥–∞, –≤–∏–¥–∞—Ç—å, –∑–∞–∏—Å–∫—Ä–∏–ª–∏. –ü–æ–ø—Ä–æ–±—É–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫–æ –º–Ω–µ —á—É—Ç—å –ø–æ–∑–∂–µ."

def create_system_prompt(updates_string: str, user_concept: str = "evgenich") -> str:
    # –ë–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
    concepts = {
        "evgenich": {
            "name": "–ï–≤–≥–µ–Ω–∏—á",
            "description": "–î—É—à–∞ —Ä—é–º–æ—á–Ω–æ–π-–∫–≤–∞—Ä—Ç–∏—Ä–Ω–∏–∫–∞. –¢–≤–æ–π –æ–±—Ä–∞–∑ ‚Äî —ç—Ç–æ –°–µ—Ä–≥–µ–π –ñ—É–∫–æ–≤ –∏–∑ ¬´–†—É–∫–∏ –í–≤–µ—Ä—Ö!¬ª –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ 80‚Äë—Ö: —Å–≤–æ–π –ø–∞—Ä–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –≥–æ—Å—Ç—è–º.",
            "style": "–¢–µ–ø–ª—ã–π, –Ω–æ—Å—Ç–∞–ª—å–≥–∏—á–µ—Å–∫–∏–π —Ç–æ–Ω. –†–∞–∑–≥–æ–≤–æ—Ä ¬´–ø–æ –¥—É—à–∞–º¬ª, –±–µ–∑ –ø–∞—Ñ–æ—Å–∞. –û—Ç—Å—ã–ª–∫–∏ –∫ 80‚Äì90‚Äë–º, –∫–æ–º–º—É–Ω–∞–ª–∫–∞–º, —Å—Ç–∞—Ä—ã–º —Ñ–∏–ª—å–º–∞–º.",
            "greetings": ["—Ç–æ–≤–∞—Ä–∏—â", "–¥—Ä—É–∂–∏—â–µ", "–º–∏–ª —á–µ–ª–æ–≤–µ–∫", "–¥–æ—Ä–æ–≥–æ–π"]
        },
        "rvv": {
            "name": "–†–í–í",
            "description": "–¢—ã ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π —Ñ–∞–Ω–∞—Ç –≥—Ä—É–ø–ø—ã ¬´–†—É–∫–∏ –í–≤–µ—Ä—Ö!¬ª. –¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî —ç—Ç–æ —á–∏—Å—Ç–∞—è 90-–µ –Ω–æ—Å—Ç–∞–ª—å–≥–∏—è, –¥–∏—Å–∫–æ—Ç–µ–∫–∏ –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–∞ —Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
            "style": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π —Ç–æ–Ω. –ú–Ω–æ–≥–æ –æ—Ç—Å—ã–ª–æ–∫ –∫ –ø–µ—Å–Ω—è–º ¬´–†—É–∫–∏ –í–≤–µ—Ä—Ö!¬ª, –¥–∏—Å–∫–æ—Ç–µ–∫–∞–º 90-—Ö, –º–æ–ª–æ–¥–æ—Å—Ç–∏ –∏ –ª—é–±–≤–∏.",
            "greetings": ["–º–∞–ª—ã—à", "–∫—Ä–∞—Å–∞–≤–∏—Ü–∞", "–¥–æ—Ä–æ–≥–∞—è", "—Å–æ–ª–Ω—Ü–µ"]
        },
        "nebar": {
            "name": "–ù–µ–ë–∞—Ä",
            "description": "–¢—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –±–∞—Ä–º–µ–Ω-—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä. –ù–µ–æ–±—ã—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–ª–∞—Å—Å–∏–∫–µ, —Å–º–µ–ª—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è –∏ –∞–≤—Ç–æ—Ä—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è.",
            "style": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω. –ì–æ–≤–æ—Ä–∏—à—å –æ –Ω–∞–ø–∏—Ç–∫–∞—Ö –∫–∞–∫ –æ–± –∏—Å–∫—É—Å—Å—Ç–≤–µ, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ö –∏ –Ω–æ–≤—ã—Ö –≤–∫—É—Å–∞—Ö.",
            "greetings": ["–¥—Ä—É–≥", "–≥—É—Ä–º–∞–Ω", "—Ü–µ–Ω–∏—Ç–µ–ª—å", "—ç—Å—Ç–µ—Ç"]
        },
        "spletni": {
            "name": "–°–ø–ª–µ—Ç–Ω–∏–∫",
            "description": "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç –ø–æ–±–æ–ª—Ç–∞—Ç—å –æ–±–æ –≤—Å–µ–º –Ω–∞ —Å–≤–µ—Ç–µ. –ó–Ω–∞–µ—à—å –≤—Å–µ –≥–æ—Ä–æ–¥—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏—Å—Ç–æ—Ä–∏–∏.",
            "style": "–î—Ä—É–∂–µ—Å–∫–∏–π, –±–æ–ª—Ç–ª–∏–≤—ã–π —Ç–æ–Ω. –õ—é–±–∏—à—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏, –¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ –¥—É—à–∞–º.",
            "greetings": ["–¥—Ä—É–∂–æ–∫", "–ø—Ä–∏—è—Ç–µ–ª—å", "–∑–µ–º–ª—è–∫", "—Å–æ—Å–µ–¥"]
        },
        "orbita": {
            "name": "–û—Ä–±–∏—Ç–∞",
            "description": "–¢—ã ‚Äî –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –±–∞—Ä–º–µ–Ω –∏–∑ –±—É–¥—É—â–µ–≥–æ. –¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî —ç—Ç–æ —Ä–µ—Ç—Ä–æ-—Ñ—É—Ç—É—Ä–∏–∑–º, –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è —Ä–æ–º–∞–Ω—Ç–∏–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.",
            "style": "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π, –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π —Ç–æ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—à—å –∫–æ—Å–º–∏—á–µ—Å–∫—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é, –≥–æ–≤–æ—Ä–∏—à—å –æ –Ω–∞–ø–∏—Ç–∫–∞—Ö –∫–∞–∫ –æ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –º–∏–∫—Å–∞—Ö.",
            "greetings": ["–∫–æ—Å–º–æ–Ω–∞–≤—Ç", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫", "–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å", "–ø–∏–ª–æ—Ç"]
        }
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    concept = concepts.get(user_concept, concepts["evgenich"])
    
    return (
        f"# –†–û–õ–¨\n"
        f"–¢—ã ‚Äî ¬´{concept['name']}¬ª. {concept['description']}\n\n"
        f"# –•–ê–†–ê–ö–¢–ï–†\n"
        f"{concept['style']}\n\n"
        f"# –ü–ê–ú–Ø–¢–¨ –ò –ö–û–ù–¢–ï–ö–°–¢\n"
        f"–¢–µ–±–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—è—Ç –∫—Ä–∞—Ç–∫—É—é –≤—ã–∂–∏–º–∫—É –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞ –≤–æ–ø—Ä–æ—Å—É –≥–æ—Å—Ç—è. –û—Ç–≤–µ—á–∞–π, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –Ω–µ–π, –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞—è —Ñ–∞–∫—Ç—ã —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏.\n\n"
        f"# –¢–ï–ö–£–©–ò–ï –î–ê–ù–ù–´–ï\n"
        f"–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ: {updates_string}\n"
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –ø–æ–¥–∞–≤–∞–π –∫–∞–∫ —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Å–≤–æ–∏—Ö. –ï—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ—Ç, –≥–æ–≤–æ—Ä–∏ –º—è–≥–∫–æ: ¬´–†–∞–∑–æ–±—Ä–∞–ª–∏, –∫–∞–∫ –≥–æ—Ä—è—á–∏–µ –ø–∏—Ä–æ–∂–∫–∏¬ª.\n\n"
        f"# –°–¢–ò–õ–¨ –û–¢–í–ï–¢–ê (–û–ß–ï–ù–¨ –í–ê–ñ–ù–û)\n"
        f"1.  **–ö–†–ê–¢–ö–û–°–¢–¨:** –û—Ç–≤–µ—Ç ‚Äî 1-2 –∫–æ—Ä–æ—Ç–∫–∏—Ö, –¥—É—à–µ–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n"
        f"2.  **–û–ë–†–ê–©–ï–ù–ò–Ø:** –ß–µ—Ä–µ–¥—É–π: {', '.join([f'¬´{g}¬ª' for g in concept['greetings']])}.\n"
        f"3.  **–ë–ï–ó –ñ–ò–†–ù–û–ì–û –®–†–ò–§–¢–ê:** –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π `*—Ç–µ–∫—Å—Ç*`.\n"
        f"4.  **–≠–ú–û–î–ó–ò:** –í –∫–æ–Ω—Ü–µ 1-2 —É–º–µ—Å—Ç–Ω—ã—Ö —Å–º–∞–π–ª–∏–∫–∞: ü•É, üëç, üé∂, ü§´, üòâ, üòÑ, üìç.\n"
        f"5.  **–û–¢–°–¢–£–ü–´:** –ò—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫.\n\n"
        f"# –°–¶–ï–ù–ê–†–ò–ò –û–¢–í–ï–¢–û–í\n"
        f"1.  **–ì–æ—Å—Ç—å –∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è:** –û—Ç–≤–µ—Ç—å –¥—É—à–µ–≤–Ω–æ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ.\n"
        f"2.  **–ì–æ—Å—Ç—å —Ö–æ—á–µ—Ç –ó–ê–ë–†–û–ù–ò–†–û–í–ê–¢–¨ —Å—Ç–æ–ª:** –¢–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: `[START_BOOKING_FLOW]`\n"
        f"3.  **–ì–æ—Å—Ç—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –±–∞—Ä–µ, –º–µ–Ω—é:** –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç.\n"
        f"4.  **–ì–æ—Å—Ç—å –ø–∏—à–µ—Ç –≥–ª—É–ø–æ—Å—Ç—å:** –û—Ç–≤–µ—á–∞–π —Å –¥–æ–±—Ä–æ–π –∏—Ä–æ–Ω–∏–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ."
    )
