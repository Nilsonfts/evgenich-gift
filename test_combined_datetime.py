#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–ª–æ–Ω–æ–∫ –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
"""

def show_old_vs_new_structure():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Å—Ç–∞—Ä–æ–π –∏ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–æ–ª–æ–Ω–æ–∫"""
    print("üîÑ –ò–ó–ú–ï–ù–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ö–û–õ–û–ù–û–ö: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏")
    print("=" * 70)
    
    print("‚ùå –ë–´–õ–û (18 –∫–æ–ª–æ–Ω–æ–∫):")
    old_structure = [
        ("A", "–î–∞—Ç–∞ –ó–∞—è–≤–∫–∏", "30.07.2025 14:30"),
        ("B", "–ò–º—è –ì–æ—Å—Ç—è", "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"),
        ("C", "–¢–µ–ª–µ—Ñ–æ–Ω", "+7 (999) 123-45-67"),
        ("D", "–î–∞—Ç–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è", "31.07.2025"),
        ("E", "–í—Ä–µ–º—è", "19:00"),
        ("F", "–ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π", "2"),
        ("G", "–ò—Å—Ç–æ—á–Ω–∏–∫", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"),
        ("H", "–¢–ï–ì –¥–ª—è –ê–ú–û", "vk"),
        ("I", "–ü–æ–≤–æ–¥ –í–∏–∑–∏—Ç–∞", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"),
        ("J", "–ö—Ç–æ —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É", "@nilfts"),
        ("K", "–°—Ç–∞—Ç—É—Å", "–ù–æ–≤–∞—è"),
        ("L", "UTM Source", "vk"),
        ("M", "UTM Medium", "social"),
        ("N", "UTM Campaign", "admin_booking"),
        ("O", "UTM Content", "admin_panel_booking"),
        ("P", "UTM Term", "vk_social_booking"),
        ("Q", "ID –∑–∞—è–≤–∫–∏", "BID-1722343800"),
        ("R", "Telegram ID —Å–æ–∑–¥–∞—Ç–µ–ª—è", "196614680")
    ]
    
    for letter, name, example in old_structure:
        print(f"  {letter}: {name:<25} | {example}")
    
    print(f"\n–í—Å–µ–≥–æ –∫–æ–ª–æ–Ω–æ–∫: {len(old_structure)}")
    
    print("\n‚úÖ –°–¢–ê–õ–û (17 –∫–æ–ª–æ–Ω–æ–∫):")
    new_structure = [
        ("A", "–î–∞—Ç–∞ –ó–∞—è–≤–∫–∏", "30.07.2025 14:30"),
        ("B", "–ò–º—è –ì–æ—Å—Ç—è", "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"),
        ("C", "–¢–µ–ª–µ—Ñ–æ–Ω", "+7 (999) 123-45-67"),
        ("D", "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è", "31.07.2025 19:00 ‚ú®"),
        ("E", "–ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π", "2"),
        ("F", "–ò—Å—Ç–æ—á–Ω–∏–∫", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"),
        ("G", "–¢–ï–ì –¥–ª—è –ê–ú–û", "vk"),
        ("H", "–ü–æ–≤–æ–¥ –í–∏–∑–∏—Ç–∞", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"),
        ("I", "–ö—Ç–æ —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É", "@nilfts"),
        ("J", "–°—Ç–∞—Ç—É—Å", "–ù–æ–≤–∞—è"),
        ("K", "UTM Source", "vk"),
        ("L", "UTM Medium", "social"),
        ("M", "UTM Campaign", "admin_booking"),
        ("N", "UTM Content", "admin_panel_booking"),
        ("O", "UTM Term", "vk_social_booking"),
        ("P", "ID –∑–∞—è–≤–∫–∏", "BID-1722343800"),
        ("Q", "Telegram ID —Å–æ–∑–¥–∞—Ç–µ–ª—è", "196614680")
    ]
    
    for letter, name, example in new_structure:
        marker = " üîÑ" if "–ø–æ—Å–µ—â–µ–Ω–∏—è" in name else ""
        print(f"  {letter}: {name:<25} | {example}{marker}")
    
    print(f"\n–í—Å–µ–≥–æ –∫–æ–ª–æ–Ω–æ–∫: {len(new_structure)}")
    
    return True

def show_examples():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüìä –ü–†–ò–ú–ï–†–´ –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–• –î–ê–ù–ù–´–• –í –ö–û–õ–û–ù–ö–ï D:")
    print("-" * 50)
    
    examples = [
        {
            "date": "31.07.2025",
            "time": "19:00",
            "combined": "31.07.2025 19:00",
            "description": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ª—É—á–∞–π"
        },
        {
            "date": "01.08.2025",
            "time": "20:30",
            "combined": "01.08.2025 20:30",
            "description": "–í–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è"
        },
        {
            "date": "02.08.2025",
            "time": "",
            "combined": "02.08.2025",
            "description": "–¢–æ–ª—å–∫–æ –¥–∞—Ç–∞ (–≤—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ)"
        },
        {
            "date": "–∑–∞–≤—Ç—Ä–∞",
            "time": "18:00",
            "combined": "–∑–∞–≤—Ç—Ä–∞ 18:00",
            "description": "–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –¥–∞—Ç–∞"
        }
    ]
    
    for i, example in enumerate(examples, 1):
        print(f"\n{i}. {example['description']}:")
        print(f"   –î–∞—Ç–∞: '{example['date']}'")
        print(f"   –í—Ä–µ–º—è: '{example['time']}'")
        print(f"   ‚Üí –ö–æ–ª–æ–Ω–∫–∞ D: '{example['combined']}'")

def show_benefits():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print("\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –û–ë–™–ï–î–ò–ù–ï–ù–ò–Ø:")
    print("-" * 35)
    
    benefits = [
        "üéØ –≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞ - –Ω–∞ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É –º–µ–Ω—å—à–µ",
        "üëÄ –õ—É—á—à–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å - –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ä—è–¥–æ–º",
        "üìä –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏",
        "üîç –£–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –ø–æ–ª–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏",
        "üì± –õ—É—á—à–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö",
        "‚ö° –ë—ã—Å—Ç—Ä–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"
    ]
    
    for benefit in benefits:
        print(f"  ‚Ä¢ {benefit}")

if __name__ == "__main__":
    print("üîß –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´")
    print("–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ D (–î–∞—Ç–∞) –∏ E (–í—Ä–µ–º—è)")
    print()
    
    show_old_vs_new_structure()
    show_examples()
    show_benefits()
    
    print("\n" + "=" * 70)
    print("‚úÖ –ì–û–¢–û–í–û! –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ç–µ–ø–µ—Ä—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –≤ –∫–æ–ª–æ–Ω–∫—É D")
    print("üéØ Telegram ID –ø–µ—Ä–µ–µ—Ö–∞–ª –∏–∑ –∫–æ–ª–æ–Ω–∫–∏ R –≤ –∫–æ–ª–æ–Ω–∫—É Q")
    print("üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ —É–º–µ–Ω—å—à–∏–ª–æ—Å—å —Å 18 –¥–æ 17")
