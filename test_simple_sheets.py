#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤–æ –≤—Ç–æ—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –±–µ–∑ config.py
"""

import os
import gspread
from google.oauth2.service_account import Credentials
import json
import logging
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

def test_google_sheets_access():
    print("üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets...")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    google_sheet_key_raw = os.getenv("GOOGLE_SHEET_KEY")
    google_credentials_json = os.getenv("GOOGLE_CREDENTIALS_JSON")
    
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"GOOGLE_SHEET_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if google_sheet_key_raw else '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"GOOGLE_CREDENTIALS_JSON: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if google_credentials_json else '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    if not google_sheet_key_raw:
        print("‚ùå GOOGLE_SHEET_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
        
    if not google_credentials_json:
        print("‚ùå GOOGLE_CREDENTIALS_JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    # –ü–∞—Ä—Å–∏–º –∫–ª—é—á–∏
    keys = [key.strip() for key in google_sheet_key_raw.split(',') if key.strip()]
    print(f"üîë –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–π: {len(keys)}")
    
    if len(keys) < 2:
        print("‚ùå –í—Ç–æ—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ - –Ω—É–∂–Ω–æ –¥–≤–∞ –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é")
        return False
    
    primary_key = keys[0]
    secondary_key = keys[1]
    
    print(f"üóùÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: {primary_key[:10]}...")
    print(f"üóùÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: {secondary_key[:10]}...")
    print()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
        credentials_info = json.loads(google_credentials_json)
        credentials = Credentials.from_service_account_info(
            credentials_info,
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        
        gc = gspread.authorize(credentials)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
        print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ...")
        secondary_sheet = gc.open_by_key(secondary_key)
        
        print(f"‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞: {secondary_sheet.title}")
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏:")
        
        for ws in secondary_sheet.worksheets():
            print(f"  - {ws.title} (id={ws.id})")
        
        # –ò—â–µ–º –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        target_gid = "871899838"  # ID –≤–∫–ª–∞–¥–∫–∏ "–ó–∞—è–≤–∫–∏ –°–æ—Ü —Å–µ—Ç–∏"
        target_worksheet = None
        
        for ws in secondary_sheet.worksheets():
            if str(ws.id) == target_gid:
                target_worksheet = ws
                break
        
        if target_worksheet:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ü–µ–ª–µ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞: {target_worksheet.title} (id={target_worksheet.id})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            try:
                headers = target_worksheet.row_values(1)
                print(f"üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ ({len(headers)} –∫–æ–ª–æ–Ω–æ–∫): {headers}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: {e}")
                
            return True
        else:
            print(f"‚ùå –í–∫–ª–∞–¥–∫–∞ —Å id={target_gid} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    result = test_google_sheets_access()
    print(f"\n{'‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω' if result else '‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω'}")
