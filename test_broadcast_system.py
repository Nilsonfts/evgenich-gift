#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–æ–∫
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('/workspaces/evgenich-gift')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
os.environ.update({
    'BOT_TOKEN': 'test_token',
    'CHANNEL_ID': '-1001234567890',
    'ADMIN_IDS': '123456789',
    'BOSS_IDS': '123456789',
    'IIKO_LOGIN': 'test',
    'IIKO_PASSWORD': 'test',
    'HELLO_STICKER_ID': 'test_hello_sticker',
    'NASTOYKA_STICKER_ID': 'test_nastoyka_sticker',
    'THANK_YOU_STICKER_ID': 'test_thank_you_sticker',
    'FRIEND_BONUS_STICKER_ID': 'test_friend_sticker',
    'MENU_URL': 'https://test-menu.com',
    'DATABASE_PATH': '/tmp/test_broadcast.db',
    'USE_POSTGRES': 'false'
})

import database
import logging

logging.basicConfig(level=logging.INFO)

def test_broadcast_system():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å—Å—ã–ª–æ–∫
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–æ–∫...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        database.init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        test_users = [
            {'user_id': 123456, 'username': 'testuser1', 'first_name': '–¢–µ—Å—Ç1'},
            {'user_id': 123457, 'username': 'testuser2', 'first_name': '–¢–µ—Å—Ç2'},
            {'user_id': 123458, 'username': 'testuser3', 'first_name': '–¢–µ—Å—Ç3'},
        ]
        
        for user in test_users:
            database.add_new_user(
                user_id=user['user_id'],
                username=user['username'],
                first_name=user['first_name'],
                source='test'
            )
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(test_users)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        users_for_broadcast = database.get_all_users_for_broadcast()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(users_for_broadcast)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        database.mark_user_blocked(123456)
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 123456 –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = database.get_broadcast_statistics()
        if stats:
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"  –í—Å–µ–≥–æ: {stats['total']}")
            print(f"  –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']}")
            print(f"  –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['blocked']}")
            print(f"  –ó–∞ 30 –¥–Ω–µ–π: {stats['recent_30d']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ø–∞–ª –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
        users_for_broadcast_after = database.get_all_users_for_broadcast()
        print(f"‚úÖ –ü–æ—Å–ª–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞–π–¥–µ–Ω–æ {len(users_for_broadcast_after)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
        
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—Å—ã–ª–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            if os.path.exists('/tmp/test_broadcast.db'):
                os.remove('/tmp/test_broadcast.db')
                print("üßπ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")
        except:
            pass

if __name__ == "__main__":
    success = test_broadcast_system()
    sys.exit(0 if success else 1)
