#!/usr/bin/env python3
"""
–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥–∞—Ö
"""
import logging
import threading
import time
from datetime import datetime, timedelta
import pytz

import database
from config import BOT_TOKEN
import telebot
from telebot import types

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
notification_bot = None

def init_notification_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    global notification_bot
    try:
        notification_bot = telebot.TeleBot(BOT_TOKEN)
        logging.info("–ë–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return True
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        return False

def send_referral_reward_notification(user_id, reward_count, reward_code):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–æ–π –Ω–∞–≥—Ä–∞–¥–µ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    """
    try:
        if not notification_bot:
            logging.error("–ë–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–≥—Ä–∞–¥–µ
        reward_text = (
            f"üéâ *–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞ –≥–æ—Ç–æ–≤–∞!*\n\n"
            f"–ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\n"
            f"ü•É **{reward_count} –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –Ω–∞—Å—Ç–æ–π–∫—É!**\n\n"
            f"üì± –ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –±–∞—Ä–º–µ–Ω—É:\n"
            f"`{reward_code}`\n\n"
            f"‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç–µ –¥—Ä—É–∑–µ–π –∫ –Ω–∞–º!"
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        keyboard = types.InlineKeyboardMarkup()
        keyboard.row(
            types.InlineKeyboardButton("ü•É –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É", callback_data="claim_reward"),
            types.InlineKeyboardButton("üìç –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª", callback_data="start_booking")
        )
        keyboard.row(
            types.InlineKeyboardButton("üìñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é", callback_data="main_menu_choice")
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notification_bot.send_message(
            user_id, 
            reward_text, 
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–≥—Ä–∞–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {reward_count} –Ω–∞–≥—Ä–∞–¥")
        return True
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        return False

def check_and_notify_ready_rewards():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –≥–æ—Ç–æ–≤—ã–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏
        users_with_referrals = database.get_users_with_pending_rewards()
        
        notifications_sent = 0
        
        for user_id in users_with_referrals:
            try:
                stats = database.get_referral_stats(user_id)
                
                if stats and stats['pending']:
                    # –ù–∞—Ö–æ–¥–∏–º –≥–æ—Ç–æ–≤—ã–µ –∫ –≤—ã–¥–∞—á–µ –Ω–∞–≥—Ä–∞–¥—ã
                    ready_rewards = []
                    
                    for ref in stats['pending']:
                        if ref['can_claim']:
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ, —á—Ç–æ –Ω–∞–≥—Ä–∞–¥–∞ –≥–æ—Ç–æ–≤–∞
                            eligible, reason = database.check_referral_reward_eligibility(user_id, ref['user_id'])
                            if eligible:
                                ready_rewards.append(ref)
                    
                    if ready_rewards:
                        # –í—ã–¥–∞–µ–º –≤—Å–µ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                        total_rewards = 0
                        for ref in ready_rewards:
                            success = database.mark_referral_rewarded(user_id, ref['user_id'])
                            if success:
                                total_rewards += 1
                        
                        if total_rewards > 0:
                            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –Ω–∞–≥—Ä–∞–¥—ã
                            reward_code = f"REF{user_id}-{datetime.now().strftime('%Y%m%d%H%M%S')}"
                            
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                            success = send_referral_reward_notification(user_id, total_rewards, reward_code)
                            
                            if success:
                                notifications_sent += 1
                                
                                # –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–¥–∞—á—É –Ω–∞–≥—Ä–∞–¥—ã
                                logging.info(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}, {total_rewards} –Ω–∞–≥—Ä–∞–¥, –∫–æ–¥ {reward_code}")
                
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                continue
        
        if notifications_sent > 0:
            logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {notifications_sent} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥–∞—Ö")
        
        return notifications_sent
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–æ—Ç–æ–≤—ã—Ö –Ω–∞–≥—Ä–∞–¥: {e}")
        return 0

def check_new_referral_completions():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞—Å—Ç–æ–π–∫—É
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä—É
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞—Å—Ç–æ–π–∫—É –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞
        recent_redeemed = database.get_recently_redeemed_referrals(hours=2)
        
        notifications_sent = 0
        
        for referral_info in recent_redeemed:
            try:
                referrer_id = referral_info['referrer_id']
                referral_name = referral_info['first_name'] or referral_info['username'] or f"ID{referral_info['user_id']}"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                notification_text = (
                    f"üéâ *–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!*\n\n"
                    f"–í–∞—à –¥—Ä—É–≥ **{referral_name}** –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É –≤ –±–∞—Ä–µ!\n\n"
                    f"‚è∞ –ß–µ—Ä–µ–∑ 48 —á–∞—Å–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ **–±–µ—Å–ø–ª–∞—Ç–Ω—É—é –Ω–∞—Å—Ç–æ–π–∫—É** –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–≥—Ä–∞–¥—ã.\n\n"
                    f"üìç –ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –∏ –ø—Ä–∏–π—Ç–∏ –≤–º–µ—Å—Ç–µ!"
                )
                
                # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
                keyboard = types.InlineKeyboardMarkup()
                keyboard.row(
                    types.InlineKeyboardButton("üìç –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª", callback_data="start_booking")
                )
                keyboard.row(
                    types.InlineKeyboardButton("ü§ù –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â–µ –¥—Ä—É–∑–µ–π", callback_data="show_referral_link"),
                    types.InlineKeyboardButton("üìñ –ú–µ–Ω—é", callback_data="main_menu_choice")
                )
                
                notification_bot.send_message(
                    referrer_id,
                    notification_text,
                    parse_mode="Markdown", 
                    reply_markup=keyboard
                )
                
                notifications_sent += 1
                logging.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {referrer_id}")
                
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")
                continue
        
        if notifications_sent > 0:
            logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {notifications_sent} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
            
        return notifications_sent
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–∞—Ü–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {e}")
        return 0

def start_referral_notification_service():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–ª—É–∂–±—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥–∞—Ö
    """
    def notification_loop():
        if not init_notification_bot():
            logging.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –ø—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –±–æ—Ç–∞")
            return
        
        logging.info("–ó–∞–ø—É—â–µ–Ω–∞ —Å–ª—É–∂–±–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥–∞—Ö")
        
        while True:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç)
                ready_rewards = check_and_notify_ready_rewards()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç)  
                new_activations = check_new_referral_completions()
                
                # –°–ø–∏–º 30 –º–∏–Ω—É—Ç
                time.sleep(1800)  # 1800 —Å–µ–∫—É–Ω–¥ = 30 –º–∏–Ω—É—Ç
                
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
                time.sleep(300)  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –∂–¥–µ–º 5 –º–∏–Ω—É—Ç
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    notification_thread = threading.Thread(target=notification_loop, daemon=True)
    notification_thread.start()
    
    logging.info("–°–ª—É–∂–±–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")

def send_immediate_referral_notification(referrer_id, referral_name):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç–æ–π–∫—É
    """
    try:
        if not notification_bot:
            if not init_notification_bot():
                return False
        
        notification_text = (
            f"üéâ *–í–∞—à –¥—Ä—É–≥ –ø–æ–ª—É—á–∏–ª –Ω–∞—Å—Ç–æ–π–∫—É!*\n\n"
            f"**{referral_name}** –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Å–≤–æ–π –∫—É–ø–æ–Ω!\n\n"
            f"‚è∞ –ß–µ—Ä–µ–∑ 48 —á–∞—Å–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ **–±–µ—Å–ø–ª–∞—Ç–Ω—É—é –Ω–∞—Å—Ç–æ–π–∫—É**\n\n"
            f"üìç –•–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –∏ –æ—Ç–ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ?"
        )
        
        keyboard = types.InlineKeyboardMarkup()
        keyboard.row(
            types.InlineKeyboardButton("üìç –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª", callback_data="start_booking")
        )
        keyboard.row(
            types.InlineKeyboardButton("ü§ù –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤", callback_data="show_referral_stats")
        )
        
        notification_bot.send_message(
            referrer_id,
            notification_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        
        logging.info(f"–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}")
        return True
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
        return False
