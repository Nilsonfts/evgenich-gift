#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Google Sheets —ç–∫—Å–ø–æ—Ä—Ç–∞
"""
from datetime import datetime, timedelta
import pytz

def get_moscow_time() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ (UTC+3).
    
    Returns:
        str: –í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "dd.mm.yyyy HH:MM"
    """
    try:
        moscow_tz = pytz.timezone('Europe/Moscow')
        moscow_time = datetime.now(moscow_tz)
        return moscow_time.strftime('%d.%m.%Y %H:%M')
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏: {e}, –∏—Å–ø–æ–ª—å–∑—É–µ–º UTC+3")
        # Fallback: UTC + 3 —á–∞—Å–∞
        utc_time = datetime.utcnow()
        moscow_time = utc_time + timedelta(hours=3)
        return moscow_time.strftime('%d.%m.%Y %H:%M')

def test_data_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Google Sheets"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
    test_row_data = [
        get_moscow_time(),
        "–¢–µ—Å—Ç-4",
        "+7(999)123-45-67",
        "30.07.2025 19:00",
        "2",
        "ü§ñ –ì–æ—Å—Ç–µ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–±–æ—Ç)",
        "guest_bot",
        "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
        "üë§ –ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å (—á–µ—Ä–µ–∑ –±–æ—Ç–∞)",
        "–ù–æ–≤–∞—è",
        "bot_tg",
        "guest_booking",
        "direct_guest",
        "bot_guest_booking",
        "guest_booking_term",
        f"BID-{int(datetime.now().timestamp())}",
        196614680
    ]
    
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {len(test_row_data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–∫–∞–∫ –≤ –∫–æ–¥–µ)
    for i, value in enumerate(test_row_data):
        if value is None:
            test_row_data[i] = ""
        elif not isinstance(value, (str, int, float)):
            test_row_data[i] = str(value)
    
    print(f"–ü–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {len(test_row_data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    print("–î–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã –¥–ª—è Google Sheets ‚úÖ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞
    for i, value in enumerate(test_row_data):
        if not isinstance(value, (str, int, float)):
            print(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç {i} –∏–º–µ–µ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø: {type(value)}")
            return False
    
    print("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
    return True

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —ç–∫—Å–ø–æ—Ä—Ç–∞\n")
    
    print(f"–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {get_moscow_time()}")
    print()
    
    test_data_validation()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
