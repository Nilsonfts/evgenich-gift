#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤–æ –≤—Ç–æ—Ä—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
"""
import os
import sys
import json
import gspread
from google.oauth2.service_account import Credentials

# –≠–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["BOT_TOKEN"] = "test"
os.environ["CHANNEL_ID"] = "test"
os.environ["ADMIN_IDS"] = "196614680"
os.environ["HELLO_STICKER_ID"] = "test"
os.environ["NASTOYKA_STICKER_ID"] = "test"
os.environ["THANK_YOU_STICKER_ID"] = "test"

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets (–µ—Å–ª–∏ –µ—Å—Ç—å)
# –í —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_secondary_table_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ –≤—Ç–æ—Ä–æ–π —Ç–∞–±–ª–∏—Ü–µ"""
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ –≤—Ç–æ—Ä–æ–π —Ç–∞–±–ª–∏—Ü–µ\n")
    
    credentials_json = os.getenv("GOOGLE_CREDENTIALS_JSON")
    if not credentials_json:
        print("‚ùå GOOGLE_CREDENTIALS_JSON –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞–ø—Ä—è–º—É—é
        credentials_info = json.loads(credentials_json)
        credentials = Credentials.from_service_account_info(
            credentials_info,
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        
        gc = gspread.authorize(credentials)
        
        # –ö–ª—é—á –≤—Ç–æ—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã
        secondary_key = "1QL1CRY3M9Av-WlDS5gswA2Lq14OPdt0TME_dpwPIuC4"
        sheet = gc.open_by_key(secondary_key)
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ –≤—Ç–æ—Ä–æ–π —Ç–∞–±–ª–∏—Ü–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {sheet.title}")
        print(f"üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏:")
        
        target_gid = "871899838"
        target_worksheet = None
        
        for ws in sheet.worksheets():
            print(f"   - {ws.title} (id={ws.id})")
            if str(ws.id) == target_gid:
                target_worksheet = ws
        
        if target_worksheet:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ü–µ–ª–µ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞: {target_worksheet.title} (id={target_worksheet.id})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            headers = target_worksheet.row_values(1)
            print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ ({len(headers)} –∫–æ–ª–æ–Ω–æ–∫):")
            for i, header in enumerate(headers, 1):
                col_letter = chr(64 + i)  # A=65, B=66, etc.
                print(f"   {col_letter}: {header}")
                
        else:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ —Å gid={target_gid}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_data_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞"""  
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    booking_data = {
        'name': '–¢–µ—Å—Ç –≠–∫—Å–ø–æ—Ä—Ç –í—Ç–æ—Ä–∞—è',
        'phone': '+7(999)888-77-66',
        'date': '30.07.2025',
        'time': '20:00',
        'guests': '3',
        'reason': '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤',
        'source': 'source_vk'
    }
    
    user_id = 196614680
    is_admin_booking = True
    
    # –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –≤ –∫–æ–¥–µ
    from datetime import datetime
    import time
    
    creation_datetime = datetime.now().strftime('%d.%m.%Y %H:%M')
    datetime_combined = f"{booking_data.get('date', '')} {booking_data.get('time', '')}"
    
    if is_admin_booking:
        channel = "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
        creator_name = "–ù–∏–ª –ú–∏—Ö–∞–π–ª—é–∫"
    else:
        channel = "–ì–æ—Å—Ç–µ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
        creator_name = "üë§ –ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å (—á–µ—Ä–µ–∑ –±–æ—Ç–∞)"
    
    utm_data = {
        'utm_source': 'vk',
        'utm_medium': 'social',
        'utm_campaign': 'direct',
        'utm_content': 'vkontakte_page',
        'utm_term': 'client_booking'
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã (–∫–æ–ª–æ–Ω–∫–∏ A-P)
    row_data = [
        creation_datetime,                      # A: –î–∞—Ç–∞ –ó–∞—è–≤–∫–∏
        channel,                                # B: –ö–∞–Ω–∞–ª
        creator_name,                           # C: –ö—Ç–æ —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É
        '–ù–æ–≤–∞—è',                                # D: –°—Ç–∞—Ç—É—Å
        f"BID-{int(time.time())}",              # E: ID us (ID –∑–∞—è–≤–∫–∏)
        booking_data.get('name', ''),           # F: –ò–º—è –ì–æ—Å—Ç—è
        booking_data.get('phone', ''),          # G: –¢–µ–ª–µ—Ñ–æ–Ω
        datetime_combined,                      # H: –î–∞—Ç–∞ / –í—Ä–µ–º—è
        booking_data.get('guests', ''),         # I: –ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π
        booking_data.get('reason', ''),         # J: –ü–æ–≤–æ–¥ –í–∏–∑–∏—Ç–∞
        utm_data.get('utm_source', ''),         # K: UTM Source (–ò—Å—Ç–æ—á–Ω–∏–∫)
        utm_data.get('utm_medium', ''),         # L: UTM Medium (–ö–∞–Ω–∞–ª)
        utm_data.get('utm_campaign', ''),       # M: UTM Campaign (–ö–∞–º–ø–∞–Ω–∏—è)
        utm_data.get('utm_content', ''),        # N: UTM Content (–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ)
        utm_data.get('utm_term', ''),           # O: UTM Term (–ö–ª—é—á/–î–∞—Ç–∞)
        user_id                                 # P: ID TG
    ]
    
    print(f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: {len(row_data)} –∫–æ–ª–æ–Ω–æ–∫")
    print("–î–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞:")
    columns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P']
    for i, (col, value) in enumerate(zip(columns, row_data)):
        print(f"   {col}: {value}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã\n")
    
    test_secondary_table_connection()
    test_data_structure()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_data_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    booking_data = {
        'name': '–¢–µ—Å—Ç –≠–∫—Å–ø–æ—Ä—Ç –í—Ç–æ—Ä–∞—è',
        'phone': '+7(999)888-77-66',
        'date': '30.07.2025',
        'time': '20:00',
        'guests': '3',
        'reason': '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤',
        'source': 'source_vk'
    }
    
    user_id = 196614680
    is_admin_booking = True
    
    # –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –≤ –∫–æ–¥–µ
    from datetime import datetime
    import time
    
    creation_datetime = datetime.now().strftime('%d.%m.%Y %H:%M')
    datetime_combined = f"{booking_data.get('date', '')} {booking_data.get('time', '')}"
    
    if is_admin_booking:
        channel = "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
        creator_name = "–ù–∏–ª –ú–∏—Ö–∞–π–ª—é–∫"
    else:
        channel = "–ì–æ—Å—Ç–µ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
        creator_name = "üë§ –ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å (—á–µ—Ä–µ–∑ –±–æ—Ç–∞)"
    
    utm_data = {
        'utm_source': 'vk',
        'utm_medium': 'social',
        'utm_campaign': 'direct',
        'utm_content': 'vkontakte_page',
        'utm_term': 'client_booking'
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã (–∫–æ–ª–æ–Ω–∫–∏ A-P)
    row_data = [
        creation_datetime,                      # A: –î–∞—Ç–∞ –ó–∞—è–≤–∫–∏
        channel,                                # B: –ö–∞–Ω–∞–ª
        creator_name,                           # C: –ö—Ç–æ —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É
        '–ù–æ–≤–∞—è',                                # D: –°—Ç–∞—Ç—É—Å
        f"BID-{int(time.time())}",              # E: ID us (ID –∑–∞—è–≤–∫–∏)
        booking_data.get('name', ''),           # F: –ò–º—è –ì–æ—Å—Ç—è
        booking_data.get('phone', ''),          # G: –¢–µ–ª–µ—Ñ–æ–Ω
        datetime_combined,                      # H: –î–∞—Ç–∞ / –í—Ä–µ–º—è
        booking_data.get('guests', ''),         # I: –ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π
        booking_data.get('reason', ''),         # J: –ü–æ–≤–æ–¥ –í–∏–∑–∏—Ç–∞
        utm_data.get('utm_source', ''),         # K: UTM Source (–ò—Å—Ç–æ—á–Ω–∏–∫)
        utm_data.get('utm_medium', ''),         # L: UTM Medium (–ö–∞–Ω–∞–ª)
        utm_data.get('utm_campaign', ''),       # M: UTM Campaign (–ö–∞–º–ø–∞–Ω–∏—è)
        utm_data.get('utm_content', ''),        # N: UTM Content (–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ)
        utm_data.get('utm_term', ''),           # O: UTM Term (–ö–ª—é—á/–î–∞—Ç–∞)
        user_id                                 # P: ID TG
    ]
    
    print(f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: {len(row_data)} –∫–æ–ª–æ–Ω–æ–∫")
    print("–î–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞:")
    columns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P']
    for i, (col, value) in enumerate(zip(columns, row_data)):
        print(f"   {col}: {value}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã\n")
    
    test_secondary_table_connection()
    test_data_structure()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
