#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ Telegram ID
"""

import sqlite3
import os

def test_simple_qr_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é —Å–∏—Å—Ç–µ–º—É QR-–∫–æ–¥–æ–≤."""
    print("üéØ –¢–ï–°–¢ –ü–†–û–°–¢–û–ô –°–ò–°–¢–ï–ú–´ QR-–ö–û–î–û–í (TELEGRAM ID)")
    print("=" * 55)
    
    db_path = "data/evgenich_data.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    cur = conn.cursor()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    print("\n1Ô∏è‚É£ –ê–ö–¢–ò–í–ù–´–ï –°–û–¢–†–£–î–ù–ò–ö–ò")
    print("-" * 30)
    
    cur.execute("SELECT * FROM staff WHERE status = 'active' ORDER BY staff_id")
    staff_list = cur.fetchall()
    
    if staff_list:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(staff_list)} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
        for staff in staff_list:
            qr_link = f"https://t.me/evgenichspbbot?start=w_{staff['unique_code']}"
            print(f"   ‚Ä¢ {staff['full_name']} ({staff['position']})")
            print(f"     –ö–æ–¥: {staff['unique_code']}")
            print(f"     QR: {qr_link}")
            print()
    else:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
        return
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∫–æ–¥–∞–º
    print("2Ô∏è‚É£ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –ü–û –ö–û–î–ê–ú")
    print("-" * 30)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º database –º–æ–¥—É–ª—å
    import sys
    sys.path.append('.')
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π config
    class TestConfig:
        BOT_TOKEN = 'test'
        CHANNEL_ID = '@test'
        ADMIN_IDS = [123]
        HELLO_STICKER_ID = 'test'
        NASTOYKA_STICKER_ID = 'test'
        THANK_YOU_STICKER_ID = 'test'
        REPORT_CHAT_ID = 123
        GOOGLE_SHEET_KEY = None
        GOOGLE_CREDENTIALS_JSON = None
    
    sys.modules['config'] = TestConfig()
    
    try:
        import database
        
        for staff in staff_list:
            test_code = staff['unique_code']
            found_staff = database.find_staff_by_code(test_code)
            
            if found_staff:
                print(f"‚úÖ –ö–æ–¥ '{test_code}' –Ω–∞–π–¥–µ–Ω: {found_staff['full_name']}")
            else:
                print(f"‚ùå –ö–æ–¥ '{test_code}' –ù–ï –Ω–∞–π–¥–µ–Ω")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–∏—Å–∫–∞: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
    print("\n3Ô∏è‚É£ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ï–†–ï–•–û–î–û–í")
    print("-" * 30)
    
    cur.execute("""
        SELECT 
            s.full_name,
            s.unique_code,
            COUNT(u.user_id) as attracted_users
        FROM staff s
        LEFT JOIN users u ON s.staff_id = u.brought_by_staff_id 
            AND u.source = 'staff'
        WHERE s.status = 'active'
        GROUP BY s.staff_id, s.full_name, s.unique_code
        ORDER BY attracted_users DESC
    """)
    
    stats = cur.fetchall()
    
    if stats:
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≥–æ—Å—Ç–µ–π:")
        for stat in stats:
            print(f"   ‚Ä¢ {stat['full_name']}: {stat['attracted_users']} –ø–µ—Ä–µ—Ö–æ–¥–æ–≤")
    else:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    print("\n4Ô∏è‚É£ –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–°–¢–û–ß–ù–ò–ö–û–í")
    print("-" * 35)
    
    cur.execute("""
        SELECT source, COUNT(*) as count 
        FROM users 
        GROUP BY source 
        ORDER BY count DESC
    """)
    
    sources = cur.fetchall()
    
    if sources:
        print("üìà –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
        for source in sources:
            print(f"   ‚Ä¢ {source['source']}: {source['count']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    else:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö")
    
    conn.close()
    
    # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
    print("\n5Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–í–û–î–ö–ê")
    print("-" * 25)
    
    print("‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
    print("\nüîó –ì–æ—Ç–æ–≤—ã–µ QR-—Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
    
    for staff in staff_list:
        qr_link = f"https://t.me/evgenichspbbot?start=w_{staff['unique_code']}"
        print(f"   ‚Ä¢ {staff['full_name']}: {qr_link}")
    
    print("\nüìã –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:")
    print("   1. –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–∞–µ—Ç –≥–æ—Å—Ç—é QR-–∫–æ–¥")
    print("   2. –ì–æ—Å—Ç—å —Å–∫–∞–Ω–∏—Ä—É–µ—Ç ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ")
    print("   3. –í –±–∞–∑–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è source = 'staff'") 
    print("   4. –í –æ—Ç—á–µ—Ç–∞—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É")
    
    print("\nüéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢!")

if __name__ == "__main__":
    test_simple_qr_system()
