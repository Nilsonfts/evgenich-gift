# handlers.py
import logging
from telebot import types
from config import CHANNEL_ID
from g_sheets import get_reward_status, add_new_user, redeem_reward

def register_handlers(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–Ω–æ–ø–æ–∫."""

    @bot.message_handler(commands=['start'])
    def handle_start(message: types.Message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
        user_id = message.from_user.id
        status = get_reward_status(user_id)
        if status in ['issued', 'redeemed']:
            bot.send_message(user_id, "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞. üòâ")
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            get_gift_button = types.KeyboardButton("üéÅ –ü–û–õ–£–ß–ò–¢–¨ –ù–ê–°–¢–û–ô–ö–£")
            keyboard.add(get_gift_button)
            bot.send_message(message.chat.id, 
                             "–ü—Ä–∏–≤–µ—Ç! üëã –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫.", 
                             reply_markup=keyboard)

    @bot.message_handler(func=lambda message: message.text == "üéÅ –ü–û–õ–£–ß–ò–¢–¨ –ù–ê–°–¢–û–ô–ö–£")
    def handle_get_gift_press(message: types.Message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –£–ú–ù–û –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É."""
        user_id = message.from_user.id
        status = get_reward_status(user_id)

        if status in ['issued', 'redeemed']:
            bot.send_message(user_id, "–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! üòâ")
            return
        
        # --- –£–ú–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ---
        try:
            chat_member = bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –£–ñ–ï –ø–æ–¥–ø–∏—Å–∞–Ω, —Å—Ä–∞–∑—É –≤—ã–¥–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
            if chat_member.status in ['member', 'administrator', 'creator']:
                bot.send_message(user_id, "–í–∏–∂—É, —Ç—ã —É–∂–µ –Ω–∞—à –ø–æ–¥–ø–∏—Å—á–∏–∫! –°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ —ç—Ç–æ. ‚ù§Ô∏è")
                issue_coupon(bot, user_id, message.from_user.username, message.from_user.first_name)
                return
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {user_id}: {e}")
            # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ñ–ª–æ—É

        # --- –û–ë–´–ß–ù–´–ô –§–õ–û–£ –î–õ–Ø –ù–û–í–´–• –ü–û–î–ü–ò–°–ß–ò–ö–û–í ---
        welcome_text = (
            "–û—Ç–ª–∏—á–Ω–æ! üëç\n\n"
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ–π–∫—É, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª. –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ —Å–µ–∫—É–Ω–¥—É.\n\n"
            "–ö–æ–≥–¥–∞ –ø–æ–¥–ø–∏—à–µ—à—å—Å—è ‚Äî –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª –∑–¥–µ—Å—å –∂–µ."
        )
        inline_keyboard = types.InlineKeyboardMarkup(row_width=1)
        channel_url = f"https://t.me/{CHANNEL_ID.lstrip('@')}"
        subscribe_button = types.InlineKeyboardButton(text="‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É", url=channel_url)
        check_button = types.InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å!", callback_data="check_subscription")
        inline_keyboard.add(subscribe_button, check_button)
        
        try:
            with open('hello.png', 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=welcome_text, reply_markup=inline_keyboard, parse_mode="Markdown")
        except FileNotFoundError:
            bot.send_message(message.chat.id, welcome_text, reply_markup=inline_keyboard, parse_mode="Markdown")

    @bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
    def handle_check_subscription(call: types.CallbackQuery):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è."""
        user_id = call.from_user.id
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.answer_callback_query(call.id, text="–ü—Ä–æ–≤–µ—Ä—è—é –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É...")

        try:
            chat_member = bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
            if chat_member.status in ['member', 'administrator', 'creator']:
                # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏/–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"
                bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
                issue_coupon(bot, user_id, call.from_user.username, call.from_user.first_name)
            else:
                bot.answer_callback_query(call.id, "–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", show_alert=True)
        
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {user_id}: {e}")
            bot.answer_callback_query(call.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)

    @bot.callback_query_handler(func=lambda call: call.data == "redeem_reward")
    def handle_redeem_reward(call: types.CallbackQuery):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–≥–∞—à–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã."""
        user_id = call.from_user.id
        if redeem_reward(user_id):
            final_text = "‚úÖ –ù–∞–≥—Ä–∞–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏. üòâ"
            bot.edit_message_caption(caption=final_text, 
                                     chat_id=call.message.chat.id, 
                                     message_id=call.message.message_id, 
                                     reply_markup=None)
        else:
            bot.answer_callback_query(call.id, "–≠—Ç–∞ –Ω–∞–≥—Ä–∞–¥–∞ —É–∂–µ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞.", show_alert=True)

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –≤—ã–¥–∞—á–∏ –∫—É–ø–æ–Ω–∞
def issue_coupon(bot, user_id, username, first_name):
    """–í—ã–¥–∞–µ—Ç –∫—É–ø–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    status = get_reward_status(user_id)
    if status in ['issued', 'redeemed']:
        # –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–≤–æ–π–Ω–æ–π –≤—ã–¥–∞—á–∏ –∏–∑-–∑–∞ –±—ã—Å—Ç—Ä—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
        return

    add_new_user(user_id, username or "N/A", first_name)
    
    coupon_text = (
        "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ\n\n"
        "–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ñ–∏—Ä–º–µ–Ω–Ω—É—é –Ω–∞—Å—Ç–æ–π–∫—É!\n\n"
        "**–í–ê–ñ–ù–û:** –ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!\n"
        "1. –ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω –±–∞—Ä–º–µ–Ω—É.\n"
        "2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **—Ç–æ–ª—å–∫–æ** –ø–æ –µ–≥–æ –ø—Ä–æ—Å—å–±–µ."
    )
    redeem_keyboard = types.InlineKeyboardMarkup()
    redeem_button = types.InlineKeyboardButton(
        text="üîí –ù–∞–≥—Ä–∞–¥–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ (–Ω–∞–∂–∞—Ç—å –ø—Ä–∏ –±–∞—Ä–º–µ–Ω–µ)", 
        callback_data="redeem_reward"
    )
    redeem_keyboard.add(redeem_button)
    
    try:
        with open('nastoyka.png', 'rb') as photo:
            bot.send_photo(user_id, photo, caption=coupon_text, parse_mode="Markdown", reply_markup=redeem_keyboard)
    except FileNotFoundError:
        bot.send_message(user_id, coupon_text, parse_mode="Markdown", reply_markup=redeem_keyboard)
