# handlers.py
import logging
from telebot import types
from config import CHANNEL_ID
from database import user_exists, add_user, check_reward_status, grant_reward
from g_sheets import add_subscription_to_sheet

def register_handlers(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–Ω–æ–ø–æ–∫."""

    @bot.message_handler(commands=['start'])
    def handle_start(message: types.Message):
        user_id = message.from_user.id
        username = message.from_user.username or "N/A"
        first_name = message.from_user.first_name

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –µ—â–µ –Ω–µ—Ç
        if not user_exists(user_id):
            add_user(user_id, username, first_name)
            logging.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} (@{username}, {user_id})")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –æ–Ω —É–∂–µ –Ω–∞–≥—Ä–∞–¥—É
        if check_reward_status(user_id):
            bot.send_message(user_id, "–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! üòâ")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_text = (
            "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
            "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∏ **—Ñ–∏—Ä–º–µ–Ω–Ω—É—é –Ω–∞—Å—Ç–æ–π–∫—É** –≤ –ø–æ–¥–∞—Ä–æ–∫!\n\n"
            "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∫–æ–≥–¥–∞ –ø–æ–¥–ø–∏—à–µ—à—å—Å—è."
        )

        keyboard = types.InlineKeyboardMarkup()
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        channel_url = f"https://t.me/{CHANNEL_ID.lstrip('@')}"
        subscribe_button = types.InlineKeyboardButton(text="‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É", url=channel_url)
        check_button = types.InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å!", callback_data="check_subscription")
        keyboard.add(subscribe_button)
        keyboard.add(check_button)

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
            with open('welcome.jpg', 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=welcome_text, reply_markup=keyboard, parse_mode="Markdown")
        except FileNotFoundError:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
            logging.warning("–§–∞–π–ª welcome.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.")
            bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard, parse_mode="Markdown")

    @bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
    def handle_check_subscription(call: types.CallbackQuery):
        user_id = call.from_user.id

        # –ï—â–µ —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–ª—É—á–∏–ª –ª–∏ –æ–Ω –Ω–∞–≥—Ä–∞–¥—É, –ø–æ–∫–∞ –¥—É–º–∞–ª
        if check_reward_status(user_id):
            bot.answer_callback_query(call.id)
            bot.edit_message_caption("–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! üòâ",
                                     call.message.chat.id, call.message.message_id)
            return

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
            chat_member = bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)

            if chat_member.status in ['member', 'administrator', 'creator']:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω!
                bot.answer_callback_query(call.id, "–û—Ç–ª–∏—á–Ω–æ, –ø–æ–¥–ø–∏—Å–∫–∞ –µ—Å—Ç—å! ‚úÖ")

                # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                grant_reward(user_id)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google –¢–∞–±–ª–∏—Ü—É
                add_subscription_to_sheet(user_id, call.from_user.username or "N/A", call.from_user.first_name)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–∫—É–ø–æ–Ω" –Ω–∞ –Ω–∞—Å—Ç–æ–π–∫—É
                coupon_text = (
                    "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ\n\n"
                    "–í–∞—à –ø–æ–¥–∞—Ä–æ–∫ - **—Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –Ω–∞—Å—Ç–æ–π–∫–∞**.\n"
                    "–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–∞—Ä–º–µ–Ω—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø—Ä–∏–∑. –ù–∞–≥—Ä–∞–¥–∞ –≤—ã–¥–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑."
                )
                try:
                    with open('tincture.jpg', 'rb') as photo:
                        bot.send_photo(user_id, photo, caption=coupon_text, parse_mode="Markdown")
                except FileNotFoundError:
                    logging.warning("–§–∞–π–ª tincture.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫—É–ø–æ–Ω.")
                    bot.send_message(user_id, coupon_text, parse_mode="Markdown")

                # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)

            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
                bot.answer_callback_query(call.id, "–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", show_alert=True)

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {user_id} –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID}: {e}")
            if 'user not found' in str(e):
                bot.answer_callback_query(call.id, "–ù–µ –º–æ–≥—É –≤–∞—Å –Ω–∞–π—Ç–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", show_alert=True)
            else:
                bot.answer_callback_query(call.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.", show_alert=True)
