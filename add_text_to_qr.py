#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–º QR-–∫–æ–¥–∞–º
"""

import qrcode
from PIL import Image, ImageDraw, ImageFont
import os
import sqlite3

def add_text_to_qr():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∫ –ø—Ä–æ—Å—Ç—ã–º QR-–∫–æ–¥–∞–º."""
    print("üéØ –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ï–ö–°–¢–ê –ö QR-–ö–û–î–ê–ú")
    print("=" * 35)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    try:
        conn = sqlite3.connect("data/evgenich_data.db")
        conn.row_factory = sqlite3.Row
        cur = conn.cursor()
        cur.execute("SELECT * FROM staff WHERE status = 'active'")
        staff_list = cur.fetchall()
        conn.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
        return
    
    input_dir = "final_qr_codes"
    output_dir = "branded_qr_codes"
    os.makedirs(output_dir, exist_ok=True)
    
    for staff in staff_list:
        name = staff['full_name']
        position = staff['position']
        code = staff['unique_code']
        
        # –§–∞–π–ª –ø—Ä–æ—Å—Ç–æ–≥–æ QR
        simple_qr_file = f"{input_dir}/{name.replace(' ', '_')}_simple_qr.png"
        
        if not os.path.exists(simple_qr_file):
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {simple_qr_file}")
            continue
            
        print(f"\nüë§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {name}")
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π QR
            qr_img = Image.open(simple_qr_file)
            qr_width, qr_height = qr_img.size
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –º–µ—Å—Ç–æ–º –¥–ª—è —Ç–µ–∫—Å—Ç–∞
            text_space = 80
            final_width = qr_width
            final_height = qr_height + text_space
            
            # –ë–µ–ª—ã–π —Ñ–æ–Ω
            final_img = Image.new('RGB', (final_width, final_height), 'white')
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º QR –≤ –≤–µ—Ä—Ö–Ω—é—é —á–∞—Å—Ç—å
            final_img.paste(qr_img, (0, 0))
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å
            draw = ImageDraw.Draw(final_img)
            
            # –ü–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
            text_start_y = qr_height + 10
            
            # –ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
            name_y = text_start_y
            draw.text((10, name_y), name, fill="black")
            
            # –î–æ–ª–∂–Ω–æ—Å—Ç—å
            position_y = text_start_y + 25
            draw.text((10, position_y), f"({position})", fill="gray")
            
            # ID –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
            id_y = text_start_y + 50
            draw.text((10, id_y), f"ID: {code}", fill="lightgray")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            output_file = f"{output_dir}/{name.replace(' ', '_')}_branded.png"
            final_img.save(output_file)
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {output_file}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {name}: {e}")
    
    print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! QR-–∫–æ–¥—ã —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –ø–∞–ø–∫–µ: {output_dir}/")
    print("üñ®Ô∏è –ì–æ—Ç–æ–≤—ã –∫ –ø–µ—á–∞—Ç–∏!")

if __name__ == "__main__":
    add_text_to_qr()
