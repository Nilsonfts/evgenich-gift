#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ–º Google Sheets - —Å–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
"""
import os
import sys
import gspread
from google.oauth2.service_account import Credentials
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º credentials
def setup_google_sheets():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets"""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets...")
    
    # –ß–∏—Ç–∞–µ–º credentials –∏–∑ —Ñ–∞–π–ª–∞
    if os.path.exists('google_creds.json'):
        creds = Credentials.from_service_account_file(
            'google_creds.json',
            scopes=[
                'https://www.googleapis.com/auth/spreadsheets',
                'https://www.googleapis.com/auth/drive'
            ]
        )
        
        client = gspread.authorize(creds)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return client
    else:
        print("‚ùå –§–∞–π–ª google_creds.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None

def find_or_create_sheet(client):
    """–ù–∞—Ö–æ–¥–∏—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç Google —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ï–≤–≥–µ–Ω–∏—á–∞"""
    
    print("\nüìä –ü–æ–∏—Å–∫/—Å–æ–∑–¥–∞–Ω–∏–µ Google —Ç–∞–±–ª–∏—Ü—ã...")
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    try:
        spreadsheets = client.list_spreadsheet_files()
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(spreadsheets)} —Ç–∞–±–ª–∏—Ü –≤ –∞–∫–∫–∞—É–Ω—Ç–µ")
        
        # –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—É –ï–≤–≥–µ–Ω–∏—á–∞
        evgenich_sheets = [s for s in spreadsheets if '–µ–≤–≥–µ–Ω–∏—á' in s['name'].lower() or 'evgenich' in s['name'].lower()]
        
        if evgenich_sheets:
            print(f"üéØ –ù–∞–π–¥–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã –ï–≤–≥–µ–Ω–∏—á–∞:")
            for sheet in evgenich_sheets:
                print(f"   - {sheet['name']} (ID: {sheet['id']})")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é
            sheet_id = evgenich_sheets[0]['id']
            sheet_name = evgenich_sheets[0]['name']
            
            try:
                spreadsheet = client.open_by_key(sheet_id)
                print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Ç–∞–±–ª–∏—Ü–µ: {sheet_name}")
                return spreadsheet, sheet_id
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É {sheet_name}: {e}")
        
        print("üìù –°–æ–∑–¥–∞—é –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É...")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü: {e}")
        print("üìù –°–æ–∑–¥–∞—é –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É...")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    try:
        spreadsheet = client.create("–ï–≤–≥–µ–Ω–∏—á - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        sheet_id = spreadsheet.id
        
        # –î–µ–ª–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—É–±–ª–∏—á–Ω–æ–π –¥–ª—è —á—Ç–µ–Ω–∏—è
        spreadsheet.share('', perm_type='anyone', role='reader')
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞: ID = {sheet_id}")
        
        return spreadsheet, sheet_id
        
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É: {e}")
        return None, None

def setup_worksheet(spreadsheet):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–∏—Å—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ"""
    
    print("\nüìÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –ª–∏—Å—Ç–∞...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç "–í—ã–≥—Ä—É–∑–∫–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        try:
            worksheet = spreadsheet.worksheet("–í—ã–≥—Ä—É–∑–∫–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print("‚úÖ –õ–∏—Å—Ç '–í—ã–≥—Ä—É–∑–∫–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' –Ω–∞–π–¥–µ–Ω")
        except:
            worksheet = spreadsheet.add_worksheet(title="–í—ã–≥—Ä—É–∑–∫–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", rows=1000, cols=10)
            print("‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç '–í—ã–≥—Ä—É–∑–∫–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = [
            '–î–∞—Ç–∞', '–í—Ä–µ–º—è', 'User ID', 'Username', '–ò–º—è', '–§–∞–º–∏–ª–∏—è', 
            '–°—Ç–∞—Ç—É—Å', '–ò—Å—Ç–æ—á–Ω–∏–∫', '–î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏', '–†–µ—Ñ–µ—Ä–µ—Ä'
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        first_row = worksheet.row_values(1)
        if not first_row or first_row != headers:
            worksheet.update('A1:J1', [headers])
            print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        else:
            print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        return worksheet
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏—Å—Ç–∞: {e}")
        return None

def test_sheet_integration(worksheet, sheet_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ç–∞–±–ª–∏—Ü–µ–π"""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É...")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        test_data = [
            datetime.now().strftime('%Y-%m-%d'),
            datetime.now().strftime('%H:%M:%S'), 
            '999999999',
            'test_user',
            '–¢–µ—Å—Ç',
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'redeemed',
            'google_sheets_test',
            datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
            ''
        ]
        
        # –ù–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        values = worksheet.get_all_values()
        next_row = len(values) + 1
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        worksheet.update(f'A{next_row}:J{next_row}', [test_data])
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫—É {next_row}")
        print(f"üìä –î–∞–Ω–Ω—ã–µ: {test_data}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print("üö® –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï GOOGLE SHEETS –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("=" * 50)
    
    # 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
    client = setup_google_sheets()
    if not client:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets")
        return False
    
    # 2. –ü–æ–∏—Å–∫/—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    spreadsheet, sheet_id = find_or_create_sheet(client)
    if not spreadsheet:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏/—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")
        return False
    
    # 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏—Å—Ç–∞
    worksheet = setup_worksheet(spreadsheet)
    if not worksheet:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç")
        return False
    
    # 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_success = test_sheet_integration(worksheet, sheet_id)
    
    # 5. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 50)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    
    if test_success:
        print("üéâ GOOGLE SHEETS –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù!")
        print(f"\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞:")
        print(f"   üìä –ù–∞–∑–≤–∞–Ω–∏–µ: {spreadsheet.title}")
        print(f"   üÜî ID: {sheet_id}")
        print(f"   üîó URL: https://docs.google.com/spreadsheets/d/{sheet_id}")
        print(f"\nüîß –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:")
        print(f"   GOOGLE_SHEET_KEY={sheet_id}")
        print(f"\n‚úÖ –¢–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print(f"   –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ Google —Ç–∞–±–ª–∏—Ü—É!")
        
        # –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª
        env_content = f"""# –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø GOOGLE SHEETS
GOOGLE_SHEET_KEY={sheet_id}
GOOGLE_CREDENTIALS_JSON=$(cat google_creds.json)

# –î—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ...
# (–¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.example)
"""
        with open('.env.fixed', 'w') as f:
            f.write(env_content)
        print(f"\nüìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.fixed —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
        
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å Google Sheets")
    
    print("\n" + "=" * 50)
    return test_success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
