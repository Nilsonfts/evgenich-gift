#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–∏—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É callback-–∑–∞–ø—Ä–æ—Å–æ–≤
test_callbacks = [
    "admin_menu_reports",
    "admin_menu_promotions", 
    "admin_menu_content",
    "admin_menu_data",
    "admin_main_menu",
    "boss_toggle_promotions",
    "check_subscription",  # –ù–µ –∞–¥–º–∏–Ω—Å–∫–∏–π
    "menu_nastoiki_main",  # –ù–µ –∞–¥–º–∏–Ω—Å–∫–∏–π
    "main_menu_choice"     # –ù–µ –∞–¥–º–∏–Ω—Å–∫–∏–π
]

def test_callback_routing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤."""
    print("üß™ –¢–ï–°–¢ –ú–ê–†–®–†–£–¢–ò–ó–ê–¶–ò–ò CALLBACK-–ó–ê–ü–†–û–°–û–í")
    print("=" * 50)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ callback_query.py
    def should_handle_in_callback_query(call_data):
        return not (call_data.startswith('admin_') or call_data.startswith('boss_'))
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ admin_panel.py
    def should_handle_in_admin_panel(call_data):
        return call_data.startswith('admin_') or call_data.startswith('boss_')
    
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏:")
    for callback in test_callbacks:
        in_callback_query = should_handle_in_callback_query(callback)
        in_admin_panel = should_handle_in_admin_panel(callback)
        
        if in_callback_query and in_admin_panel:
            status = "‚ùå –ö–û–ù–§–õ–ò–ö–¢"
        elif in_callback_query:
            status = "‚úÖ callback_query.py"
        elif in_admin_panel:
            status = "‚úÖ admin_panel.py"
        else:
            status = "‚ö†Ô∏è –ù–ï –û–ë–†–ê–ë–û–¢–ê–ï–¢–°–Ø"
        
        print(f"  ‚Ä¢ {callback:<25} ‚Üí {status}")
    
    print("\n" + "=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ callback-–∑–∞–ø—Ä–æ—Å—ã
    admin_callbacks = [cb for cb in test_callbacks if cb.startswith('admin_') or cb.startswith('boss_')]
    non_admin_callbacks = [cb for cb in test_callbacks if not (cb.startswith('admin_') or cb.startswith('boss_'))]
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –ê–¥–º–∏–Ω—Å–∫–∏–µ callback-–∑–∞–ø—Ä–æ—Å—ã: {len(admin_callbacks)}")
    print(f"  ‚Ä¢ –û–±—ã—á–Ω—ã–µ callback-–∑–∞–ø—Ä–æ—Å—ã: {len(non_admin_callbacks)}")
    
    conflicts = 0
    for callback in test_callbacks:
        if should_handle_in_callback_query(callback) and should_handle_in_admin_panel(callback):
            conflicts += 1
    
    if conflicts == 0:
        print(f"  ‚Ä¢ –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: {conflicts} ‚úÖ")
        print("\nüéâ –í—Å–µ callback-–∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print(f"  ‚Ä¢ –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: {conflicts} ‚ùå")
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏!")
    
    return conflicts == 0

if __name__ == "__main__":
    test_callback_routing()
